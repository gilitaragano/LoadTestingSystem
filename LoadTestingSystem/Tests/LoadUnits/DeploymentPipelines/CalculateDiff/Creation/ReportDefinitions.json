{
  "artifactEntries": [
    {
      "type": "ReportAndSemanticModel",
      "artifactDefinitions": [
        {
          "definitionParts": [
            {
              "path": "/SalesV2 1.Report/.platform",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIlJlcG9ydCIsCiAgICAiZGlzcGxheU5hbWUiOiAiU2FsZXNWMiAxIgogIH0sCiAgImNvbmZpZyI6IHsKICAgICJ2ZXJzaW9uIjogIjIuMCIsCiAgICAibG9naWNhbElkIjogIjdlNjM0MTM0LTRhNjUtYjgyMC00OTkzLTQ1OGNhMTI1MWY0ZCIKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition.pbir",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uUHJvcGVydGllcy8yLjAuMC9zY2hlbWEuanNvbiIsCiAgInZlcnNpb24iOiAiNC4wIiwKICAiZGF0YXNldFJlZmVyZW5jZSI6IHsKICAgICJieVBhdGgiOiB7CiAgICAgICJwYXRoIjogIi4uL1NhbGVzVjIgMS5TZW1hbnRpY01vZGVsIgogICAgfQogIH0KfQ==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/CustomVisuals/vize75ae59288904738AFB840E67D4F71B35B3EA9CE603624/resources/vize75ae59288904738AFB840E67D4F71B35B3EA9CE603624.pbiviz.json",
              "payload": "",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/StaticResources/SharedResources/BaseThemes/CY23SU04.json",
              "payload": "",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/CustomVisuals/vize75ae59288904738AFB840E67D4F71B35B3EA9CE603624/package.json",
              "payload": "ew0KICAidmVyc2lvbiI6ICIxLjAuMCIsDQogICJhdXRob3IiOiB7DQogICAgIm5hbWUiOiAidGVzdCIsDQogICAgImVtYWlsIjogInRlc3RAZW1haWwuY29tIg0KICB9LA0KICAicmVzb3VyY2VzIjogWw0KICAgIHsNCiAgICAgICJyZXNvdXJjZUlkIjogInJJZDAiLA0KICAgICAgInNvdXJjZVR5cGUiOiA1LA0KICAgICAgImZpbGUiOiAicmVzb3VyY2VzL3ZpemU3NWFlNTkyODg5MDQ3MzhBRkI4NDBFNjdENEY3MUIzNUIzRUE5Q0U2MDM2MjQucGJpdml6Lmpzb24iDQogICAgfQ0KICBdLA0KICAidmlzdWFsIjogew0KICAgICJndWlkIjogInZpemU3NWFlNTkyODg5MDQ3MzhBRkI4NDBFNjdENEY3MUIzNUIzRUE5Q0U2MDM2MjQiLA0KICAgICJuYW1lIjogInZpemU3NWFlNTkyODg5MDQ3IiwNCiAgICAiZGlzcGxheU5hbWUiOiAidml6ZTc1YWU1OTI4ODkwNDciLA0KICAgICJ2ZXJzaW9uIjogIjEuMC4wIiwNCiAgICAiZGVzY3JpcHRpb24iOiAidGVzdCIsDQogICAgInN1cHBvcnRVcmwiOiAiaHR0cHM6Ly9iaW5nLmNvbSIsDQogICAgImdpdEh1YlVybCI6ICJodHRwczovL2JpbmcuY29tIiwNCiAgICAidmlzdWFsQ2xhc3NOYW1lIjogIlZpc3VhbCINCiAgfSwNCiAgIm1ldGFkYXRhIjogew0KICAgICJwYml2aXpqc29uIjogew0KICAgICAgInJlc291cmNlSWQiOiAicklkMCINCiAgICB9DQogIH0NCn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/77570a0f383dc25d5d9e/page.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3BhZ2UvMS4zLjAvc2NoZW1hLmpzb24iLAogICJuYW1lIjogIjc3NTcwYTBmMzgzZGMyNWQ1ZDllIiwKICAiZGlzcGxheU5hbWUiOiAiUGFnZSAxIiwKICAiZGlzcGxheU9wdGlvbiI6ICJGaXRUb1BhZ2UiLAogICJoZWlnaHQiOiA3MjAsCiAgIndpZHRoIjogMTI4MAp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/StaticResources/SharedResources/BuiltInThemes/Temperature.json",
              "payload": "ewogICJuYW1lIjogIlRlbXBlcmF0dXJlIiwKICAiZGF0YUNvbG9ycyI6IFsKICAgICIjMjYyQTc2IiwKICAgICIjMjM0OTkwIiwKICAgICIjMkY4QUMzIiwKICAgICIjMjZCMEQyIiwKICAgICIjRkZDMUNCIiwKICAgICIjRUI1NTU5IiwKICAgICIjQUUzNTM1IiwKICAgICIjOEUxRjIwIiwKICAgICIjN0Q3RkFEIiwKICAgICIjN0I5MkJDIiwKICAgICIjODJCOURCIiwKICAgICIjN0REMEU0IiwKICAgICIjRkZEQUUwIiwKICAgICIjRjM5OTlCIiwKICAgICIjQ0U4Njg2IiwKICAgICIjQkI3OTc5IiwKICAgICIjMTMxNTNCIiwKICAgICIjMTIyNTQ4IiwKICAgICIjMTg0NTYyIiwKICAgICIjMTM1ODY5IiwKICAgICIjODA2MTY2IiwKICAgICIjNzYyQjJEIiwKICAgICIjNTcxQjFCIiwKICAgICIjNDcxMDEwIgogIF0sCiAgInRhYmxlQWNjZW50IjogIiMyNjJBNzYiLAogICJtYXhpbXVtIjogIiMyNjJBNzYiLAogICJjZW50ZXIiOiAiIzhFMUYyMCIsCiAgIm1pbmltdW0iOiAiI0YxRjFGMSIKfQ==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/pages.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3BhZ2VzTWV0YWRhdGEvMS4wLjAvc2NoZW1hLmpzb24iLAogICJwYWdlT3JkZXIiOiBbCiAgICAiUmVwb3J0U2VjdGlvbjg5YTk2MTljNzAyNTA5M2FkZTFjIiwKICAgICJSZXBvcnRTZWN0aW9uOGEyZDFlOTNjODQ0Mjc2MzgyN2MiLAogICAgIjc3NTcwYTBmMzgzZGMyNWQ1ZDllIgogIF0sCiAgImFjdGl2ZVBhZ2VOYW1lIjogIjc3NTcwYTBmMzgzZGMyNWQ1ZDllIgp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/version.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3ZlcnNpb25NZXRhZGF0YS8xLjAuMC9zY2hlbWEuanNvbiIsCiAgInZlcnNpb24iOiAiMi4wLjAiCn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/report.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3JlcG9ydC8xLjIuMC9zY2hlbWEuanNvbiIsCiAgInRoZW1lQ29sbGVjdGlvbiI6IHsKICAgICJiYXNlVGhlbWUiOiB7CiAgICAgICJuYW1lIjogIkNZMjNTVTA0IiwKICAgICAgInJlcG9ydFZlcnNpb25BdEltcG9ydCI6ICI1LjQzIiwKICAgICAgInR5cGUiOiAiU2hhcmVkUmVzb3VyY2VzIgogICAgfSwKICAgICJjdXN0b21UaGVtZSI6IHsKICAgICAgIm5hbWUiOiAiVGVtcGVyYXR1cmUiLAogICAgICAicmVwb3J0VmVyc2lvbkF0SW1wb3J0IjogIjUuNDMiLAogICAgICAidHlwZSI6ICJTaGFyZWRSZXNvdXJjZXMiCiAgICB9CiAgfSwKICAibGF5b3V0T3B0aW1pemF0aW9uIjogIlBob25lUG9ydHJhaXQiLAogICJvYmplY3RzIjogewogICAgIm91dHNwYWNlUGFuZSI6IFsKICAgICAgewogICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgImV4cGFuZGVkIjogewogICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICJWYWx1ZSI6ICJmYWxzZSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAidmlzaWJsZSI6IHsKICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAiVmFsdWUiOiAidHJ1ZSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIF0KICB9LAogICJyZXNvdXJjZVBhY2thZ2VzIjogWwogICAgewogICAgICAibmFtZSI6ICJTaGFyZWRSZXNvdXJjZXMiLAogICAgICAidHlwZSI6ICJTaGFyZWRSZXNvdXJjZXMiLAogICAgICAiaXRlbXMiOiBbCiAgICAgICAgewogICAgICAgICAgIm5hbWUiOiAiQ1kyM1NVMDQiLAogICAgICAgICAgInBhdGgiOiAiQmFzZVRoZW1lcy9DWTIzU1UwNC5qc29uIiwKICAgICAgICAgICJ0eXBlIjogIkJhc2VUaGVtZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJuYW1lIjogIlRlbXBlcmF0dXJlIiwKICAgICAgICAgICJwYXRoIjogIkJ1aWx0SW5UaGVtZXMvVGVtcGVyYXR1cmUuanNvbiIsCiAgICAgICAgICAidHlwZSI6ICJDdXN0b21UaGVtZSIKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogInZpemU3NWFlNTkyODg5MDQ3MzhBRkI4NDBFNjdENEY3MUIzNUIzRUE5Q0U2MDM2MjQiLAogICAgICAidHlwZSI6ICJDdXN0b21WaXN1YWwiLAogICAgICAiaXRlbXMiOiBbCiAgICAgICAgewogICAgICAgICAgIm5hbWUiOiAidml6ZTc1YWU1OTI4ODkwNDczOEFGQjg0MEU2N0Q0RjcxQjM1QjNFQTlDRTYwMzYyNC5wYml2aXouanNvbiIsCiAgICAgICAgICAicGF0aCI6ICJ2aXplNzVhZTU5Mjg4OTA0NzM4QUZCODQwRTY3RDRGNzFCMzVCM0VBOUNFNjAzNjI0LnBiaXZpei5qc29uIiwKICAgICAgICAgICJ0eXBlIjogIkN1c3RvbVZpc3VhbE1ldGFkYXRhIgogICAgICAgIH0KICAgICAgXQogICAgfQogIF0sCiAgInNldHRpbmdzIjogewogICAgInVzZVN0eWxhYmxlVmlzdWFsQ29udGFpbmVySGVhZGVyIjogdHJ1ZSwKICAgICJleHBvcnREYXRhTW9kZSI6ICJBbGxvd1N1bW1hcml6ZWRBbmRVbmRlcmx5aW5nIiwKICAgICJkZWZhdWx0RmlsdGVyQWN0aW9uSXNEYXRhRmlsdGVyIjogdHJ1ZSwKICAgICJkZWZhdWx0RHJpbGxGaWx0ZXJPdGhlclZpc3VhbHMiOiB0cnVlLAogICAgImFsbG93Q2hhbmdlRmlsdGVyVHlwZXMiOiB0cnVlLAogICAgImFsbG93SW5saW5lRXhwbG9yYXRpb24iOiB0cnVlLAogICAgInVzZUVuaGFuY2VkVG9vbHRpcHMiOiB0cnVlCiAgfSwKICAic2xvd0RhdGFTb3VyY2VTZXR0aW5ncyI6IHsKICAgICJpc0Nyb3NzSGlnaGxpZ2h0aW5nRGlzYWJsZWQiOiBmYWxzZSwKICAgICJpc1NsaWNlclNlbGVjdGlvbnNCdXR0b25FbmFibGVkIjogZmFsc2UsCiAgICAiaXNGaWx0ZXJTZWxlY3Rpb25zQnV0dG9uRW5hYmxlZCI6IGZhbHNlLAogICAgImlzRmllbGRXZWxsQnV0dG9uRW5hYmxlZCI6IGZhbHNlLAogICAgImlzQXBwbHlBbGxCdXR0b25FbmFibGVkIjogZmFsc2UKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/77570a0f383dc25d5d9e/visuals/1edc6deccd115d47103e/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiMWVkYzZkZWNjZDExNWQ0NzEwM2UiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogNDYxLjAwNzg4MTUzODA5NDEzLAogICAgInkiOiAxNjkuOTczNzI4MjA2MzUzLAogICAgInoiOiAwLAogICAgImhlaWdodCI6IDIzNi4wMDY2ODczNjU2NTU2MSwKICAgICJ3aWR0aCI6IDQwNy4yMDMyNDgxNDkwMzI3MywKICAgICJ0YWJPcmRlciI6IDAKICB9LAogICJ2aXN1YWwiOiB7CiAgICAidmlzdWFsVHlwZSI6ICJ2aXplNzVhZTU5Mjg4OTA0NzM4QUZCODQwRTY3RDRGNzFCMzVCM0VBOUNFNjAzNjI0IiwKICAgICJxdWVyeSI6IHsKICAgICAgInF1ZXJ5U3RhdGUiOiB7CiAgICAgICAgImNhdGVnb3J5IjogewogICAgICAgICAgInByb2plY3Rpb25zIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiUHJvZHVjdCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJQcm9kdWN0IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlByb2R1Y3QuUHJvZHVjdCIsCiAgICAgICAgICAgICAgIm5hdGl2ZVF1ZXJ5UmVmIjogIlByb2R1Y3QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJQcm9kdWN0IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlN1YmNhdGVnb3J5IENvZGUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiUHJvZHVjdC5TdWJjYXRlZ29yeSBDb2RlIiwKICAgICAgICAgICAgICAibmF0aXZlUXVlcnlSZWYiOiAiU3ViY2F0ZWdvcnkgQ29kZSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIlByb2R1Y3QiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiVW5pdCBDb3N0IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlByb2R1Y3QuVW5pdCBDb3N0IiwKICAgICAgICAgICAgICAibmF0aXZlUXVlcnlSZWYiOiAiVW5pdCBDb3N0IgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiUHJvZHVjdCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJVbml0IFByaWNlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlByb2R1Y3QuVW5pdCBQcmljZSIsCiAgICAgICAgICAgICAgIm5hdGl2ZVF1ZXJ5UmVmIjogIlVuaXQgUHJpY2UiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJDdXN0b21lciIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJBZ2UiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiQ3VzdG9tZXIuQWdlIiwKICAgICAgICAgICAgICAibmF0aXZlUXVlcnlSZWYiOiAiQWdlIgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiQ3VzdG9tZXIiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiQmlydGhkYXkiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiQ3VzdG9tZXIuQmlydGhkYXkiLAogICAgICAgICAgICAgICJuYXRpdmVRdWVyeVJlZiI6ICJCaXJ0aGRheSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkN1c3RvbWVyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIkNvbnRpbmVudCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJxdWVyeVJlZiI6ICJDdXN0b21lci5Db250aW5lbnQiLAogICAgICAgICAgICAgICJuYXRpdmVRdWVyeVJlZiI6ICJDb250aW5lbnQiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJzb3J0RGVmaW5pdGlvbiI6IHsKICAgICAgICAic29ydCI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIlByb2R1Y3QiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiUHJvZHVjdCIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiQXNjZW5kaW5nIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImlzRGVmYXVsdFNvcnQiOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICAiZHJpbGxGaWx0ZXJPdGhlclZpc3VhbHMiOiB0cnVlCiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/page.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3BhZ2UvMS4zLjAvc2NoZW1hLmpzb24iLAogICJuYW1lIjogIlJlcG9ydFNlY3Rpb244OWE5NjE5YzcwMjUwOTNhZGUxYyIsCiAgImRpc3BsYXlOYW1lIjogIlNhbGVzIiwKICAiZGlzcGxheU9wdGlvbiI6ICJGaXRUb1BhZ2UiLAogICJoZWlnaHQiOiA3MjAsCiAgIndpZHRoIjogMTI4MCwKICAiZmlsdGVyQ29uZmlnIjogewogICAgImZpbHRlcnMiOiBbCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJGaWx0ZXJmOTk0MjhjNTQ4OWNjNGU2NzQ3YSIsCiAgICAgICAgIm9yZGluYWwiOiAwLAogICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAiRW50aXR5IjogIkNhbGVuZGFyIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgIlByb3BlcnR5IjogIlllYXIiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAidHlwZSI6ICJDYXRlZ29yaWNhbCIsCiAgICAgICAgImhvd0NyZWF0ZWQiOiAiVXNlciIsCiAgICAgICAgIm9iamVjdHMiOiB7CiAgICAgICAgICAiZ2VuZXJhbCI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICAgInJlcXVpcmVTaW5nbGVTZWxlY3QiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJMaXRlcmFsIjogewogICAgICAgICAgICAgICAgICAgICAgIlZhbHVlIjogInRydWUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9LAogICAgICB7CiAgICAgICAgIm5hbWUiOiAiRmlsdGVyNzhiZGExOTA4YTBiZDc0OWQ4NmEiLAogICAgICAgICJvcmRpbmFsIjogMSwKICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgIkVudGl0eSI6ICJQcm9kdWN0IgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgIlByb3BlcnR5IjogIkNhdGVnb3J5IgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInR5cGUiOiAiQ2F0ZWdvcmljYWwiLAogICAgICAgICJob3dDcmVhdGVkIjogIlVzZXIiCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJGaWx0ZXI5Y2U0ZGQyOGMyNWIyNGFiMTYwMyIsCiAgICAgICAgIm9yZGluYWwiOiAyLAogICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAiRW50aXR5IjogIlByb2R1Y3QiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiUHJvcGVydHkiOiAiU3ViY2F0ZWdvcnkiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAidHlwZSI6ICJDYXRlZ29yaWNhbCIsCiAgICAgICAgImhvd0NyZWF0ZWQiOiAiVXNlciIKICAgICAgfSwKICAgICAgewogICAgICAgICJuYW1lIjogIkZpbHRlcmZhNTlkYWNlMzRhMGQyYjA2MGMxIiwKICAgICAgICAib3JkaW5hbCI6IDMsCiAgICAgICAgImZpZWxkIjogewogICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU3RvcmUiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiUHJvcGVydHkiOiAiU3RvcmUiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAidHlwZSI6ICJDYXRlZ29yaWNhbCIsCiAgICAgICAgImhvd0NyZWF0ZWQiOiAiVXNlciIKICAgICAgfQogICAgXSwKICAgICJmaWx0ZXJTb3J0T3JkZXIiOiAiQ3VzdG9tIgogIH0sCiAgInBhZ2VCaW5kaW5nIjogewogICAgIm5hbWUiOiAiUG9kNiIsCiAgICAidHlwZSI6ICJEcmlsbHRocm91Z2giLAogICAgInBhcmFtZXRlcnMiOiBbCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJQYXJhbV9GaWx0ZXJmOTk0MjhjNTQ4OWNjNGU2NzQ3YSIsCiAgICAgICAgImJvdW5kRmlsdGVyIjogIkZpbHRlcmY5OTQyOGM1NDg5Y2M0ZTY3NDdhIiwKICAgICAgICAicW5hU2luZ2xlU2VsZWN0UmVxdWlyZWQiOiB0cnVlLAogICAgICAgICJmaWVsZEV4cHIiOiB7CiAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgIkVudGl0eSI6ICJDYWxlbmRhciIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJZZWFyIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgXQogIH0sCiAgIm9iamVjdHMiOiB7CiAgICAib3V0c3BhY2VQYW5lIjogWwogICAgICB7CiAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAid2lkdGgiOiB7CiAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICJMaXRlcmFsIjogewogICAgICAgICAgICAgICAgIlZhbHVlIjogIjMwM0wiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICBdCiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/0f9bcdc145fc9e6fdc33/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiMGY5YmNkYzE0NWZjOWU2ZmRjMzMiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogMjU2LjEzMTAxMzMwNjAzODg4LAogICAgInkiOiA4MC41NzMxODMyMTM5MjAxNiwKICAgICJ6IjogMTAwMCwKICAgICJoZWlnaHQiOiAxMTEuMzYxMzEwMTMzMDYwMzksCiAgICAid2lkdGgiOiAyMjQuMDMyNzUzMzI2NTA5NzIsCiAgICAidGFiT3JkZXIiOiAxMDAwCiAgfSwKICAidmlzdWFsIjogewogICAgInZpc3VhbFR5cGUiOiAiY2FyZCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJWYWx1ZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU2FsZXMiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiTWFyZ2luIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlNhbGVzLk1hcmdpbiIKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfSwKICAgICAgInNvcnREZWZpbml0aW9uIjogewogICAgICAgICJzb3J0IjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgIk1lYXN1cmUiOiB7CiAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIlNhbGVzIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIk1hcmdpbiIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiRGVzY2VuZGluZyIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJpc0RlZmF1bHRTb3J0IjogdHJ1ZQogICAgICB9CiAgICB9LAogICAgIm9iamVjdHMiOiB7CiAgICAgICJsYWJlbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAic29saWQiOiB7CiAgICAgICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJUaGVtZURhdGFDb2xvciI6IHsKICAgICAgICAgICAgICAgICAgICAgICJDb2xvcklkIjogMCwKICAgICAgICAgICAgICAgICAgICAgICJQZXJjZW50IjogMAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgImZvbnRTaXplIjogewogICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICJWYWx1ZSI6ICIxNkQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdLAogICAgICAiY2F0ZWdvcnlMYWJlbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAic29saWQiOiB7CiAgICAgICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJUaGVtZURhdGFDb2xvciI6IHsKICAgICAgICAgICAgICAgICAgICAgICJDb2xvcklkIjogMCwKICAgICAgICAgICAgICAgICAgICAgICJQZXJjZW50IjogMAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJ2aXN1YWxDb250YWluZXJPYmplY3RzIjogewogICAgICAiYmFja2dyb3VuZCI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogInRydWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgInNvbGlkIjogewogICAgICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICAgICAiVGhlbWVEYXRhQ29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sb3JJZCI6IDMsCiAgICAgICAgICAgICAgICAgICAgICAiUGVyY2VudCI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ0cmFuc3BhcmVuY3kiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIjBEIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgImJvcmRlciI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogImZhbHNlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9LAogICJmaWx0ZXJDb25maWciOiB7CiAgICAiZmlsdGVycyI6IFsKICAgICAgewogICAgICAgICJuYW1lIjogIkZpbHRlcjJhMWFlODMxMWRkNWJkODBlMDZjIiwKICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTbWFydCBDYWxjcyIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTbWFydCBDYWxjIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInR5cGUiOiAiQ2F0ZWdvcmljYWwiLAogICAgICAgICJmaWx0ZXIiOiB7CiAgICAgICAgICAiVmVyc2lvbiI6IDIsCiAgICAgICAgICAiRnJvbSI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJOYW1lIjogInMiLAogICAgICAgICAgICAgICJFbnRpdHkiOiAiU21hcnQgQ2FsY3MiLAogICAgICAgICAgICAgICJUeXBlIjogMAogICAgICAgICAgICB9CiAgICAgICAgICBdLAogICAgICAgICAgIldoZXJlIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgIkNvbmRpdGlvbiI6IHsKICAgICAgICAgICAgICAgICJJbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb25zIjogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiU291cmNlIjogInMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiU21hcnQgQ2FsYyIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICJWYWx1ZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiJ0xhYmVsIC0g4payIExZJyIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgImhvd0NyZWF0ZWQiOiAiVXNlciIKICAgICAgfQogICAgXQogIH0KfQ==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/16d45d719c3475decb7f/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiMTZkNDVkNzE5YzM0NzVkZWNiN2YiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogODQ0LjI1NTMxOTE0ODkzNjIyLAogICAgInkiOiAyMDcuODM4NzQ1ODAwNjcxODksCiAgICAieiI6IDkwMDAsCiAgICAiaGVpZ2h0IjogMjcwLjkwNzA1NDg3MTIyMDYyLAogICAgIndpZHRoIjogNDAyLjc3NzE1NTY1NTA5NTIxLAogICAgInRhYk9yZGVyIjogOTAwMAogIH0sCiAgInZpc3VhbCI6IHsKICAgICJ2aXN1YWxUeXBlIjogIm1hcCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJDYXRlZ29yeSI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkN1c3RvbWVyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIkNvdW50cnkiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiQ3VzdG9tZXIuQ291bnRyeSIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkN1c3RvbWVyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlN0YXRlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIkN1c3RvbWVyLlN0YXRlIiwKICAgICAgICAgICAgICAiYWN0aXZlIjogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkN1c3RvbWVyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIkNpdHkiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiQ3VzdG9tZXIuQ2l0eSIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJTZXJpZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJDdXN0b21lciIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJHZW5kZXIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiQ3VzdG9tZXIuR2VuZGVyIgogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICAiU2l6ZSI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJNZWFzdXJlIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTYWxlcyIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTYWxlcyBBbW91bnQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiU2FsZXMuU2FsZXMgQW1vdW50IgogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9LAogICAgICAic29ydERlZmluaXRpb24iOiB7CiAgICAgICAgInNvcnQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU2FsZXMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiU2FsZXMgQW1vdW50IgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRpcmVjdGlvbiI6ICJEZXNjZW5kaW5nIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImlzRGVmYXVsdFNvcnQiOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICAiZHJpbGxGaWx0ZXJPdGhlclZpc3VhbHMiOiB0cnVlCiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/484fbdd73143c5bf71fa/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiNDg0ZmJkZDczMTQzYzViZjcxZmEiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogMzIuMjUwODM5ODY1NjIxNSwKICAgICJ5IjogNDk1LjIyOTU2MzI2OTg3Njg1LAogICAgInoiOiA2MDAwLAogICAgImhlaWdodCI6IDIxMy41NzIyMjg0NDM0NDkwNiwKICAgICJ3aWR0aCI6IDc0Mi40ODYwMDIyMzk2NDE3MiwKICAgICJ0YWJPcmRlciI6IDYwMDAKICB9LAogICJ2aXN1YWwiOiB7CiAgICAidmlzdWFsVHlwZSI6ICJsaW5lQ2x1c3RlcmVkQ29sdW1uQ29tYm9DaGFydCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJDYXRlZ29yeSI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkNhbGVuZGFyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlllYXIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiQ2FsZW5kYXIuWWVhciIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkNhbGVuZGFyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIk1vbnRoIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIkNhbGVuZGFyLk1vbnRoIiwKICAgICAgICAgICAgICAiYWN0aXZlIjogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICAiWSI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJNZWFzdXJlIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTYWxlcyIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTYWxlcyBBbW91bnQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiU2FsZXMuU2FsZXMgQW1vdW50IgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICAgIk1lYXN1cmUiOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIlNhbGVzIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlNhbGVzIEFtb3VudCAoTFkpIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlNhbGVzLlNhbGVzIEFtb3VudCAoTFkpIgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICAgIk1lYXN1cmUiOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIlNhbGVzIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIk1hcmdpbiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJxdWVyeVJlZiI6ICJTYWxlcy5NYXJnaW4iLAogICAgICAgICAgICAgICJuYXRpdmVRdWVyeVJlZiI6ICJNYXJnaW4iCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJZMiI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJNZWFzdXJlIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTYWxlcyIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTYWxlcyBBbW91bnQgKDEyTSBhdmVyYWdlKSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJxdWVyeVJlZiI6ICJTYWxlcy5TYWxlcyBBbW91bnQgKDEyTSBhdmVyYWdlKSIsCiAgICAgICAgICAgICAgIm5hdGl2ZVF1ZXJ5UmVmIjogIlNhbGVzIEFtb3VudCAoMTJNIGF2ZXJhZ2UpIgogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9LAogICAgICAic29ydERlZmluaXRpb24iOiB7CiAgICAgICAgInNvcnQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJDYWxlbmRhciIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJZZWFyIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRpcmVjdGlvbiI6ICJBc2NlbmRpbmciCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiQ2FsZW5kYXIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiTW9udGgiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGlyZWN0aW9uIjogIkFzY2VuZGluZyIKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0KICAgIH0sCiAgICAiZHJpbGxGaWx0ZXJPdGhlclZpc3VhbHMiOiB0cnVlCiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/3641d5ce63678e76a370/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiMzY0MWQ1Y2U2MzY3OGU3NmEzNzAiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogOTgwLjYxODQ5ODc3ODc2NTM0LAogICAgInkiOiAzLjgzNTUzNTE5NzMwOTM4MjMsCiAgICAieiI6IDExMDAwLAogICAgImhlaWdodCI6IDcwLjMxODE0NTI4NDAwNTM0LAogICAgIndpZHRoIjogMjk5LjE3MTc0NTM5MDEzMTgzLAogICAgInRhYk9yZGVyIjogMTEwMDAKICB9LAogICJ2aXN1YWwiOiB7CiAgICAidmlzdWFsVHlwZSI6ICJjYXJkIiwKICAgICJxdWVyeSI6IHsKICAgICAgInF1ZXJ5U3RhdGUiOiB7CiAgICAgICAgIlZhbHVlcyI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJBZ2dyZWdhdGlvbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiQWJvdXQiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiVmFsdWUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiRnVuY3Rpb24iOiAzCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiTWluKEFib3V0LlZhbHVlKSIKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJvYmplY3RzIjogewogICAgICAibGFiZWxzIjogWwogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiZm9udFNpemUiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIjIwRCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJjYXRlZ29yeUxhYmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogImZhbHNlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9LAogICJmaWx0ZXJDb25maWciOiB7CiAgICAiZmlsdGVycyI6IFsKICAgICAgewogICAgICAgICJuYW1lIjogIkZpbHRlcmYxZWMyNWJiNzIyZDMwYmU0NzU1IiwKICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgIkVudGl0eSI6ICJBYm91dCIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJLZXkiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAidHlwZSI6ICJDYXRlZ29yaWNhbCIsCiAgICAgICAgImZpbHRlciI6IHsKICAgICAgICAgICJWZXJzaW9uIjogMiwKICAgICAgICAgICJGcm9tIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgIk5hbWUiOiAiYSIsCiAgICAgICAgICAgICAgIkVudGl0eSI6ICJBYm91dCIsCiAgICAgICAgICAgICAgIlR5cGUiOiAwCiAgICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICAiV2hlcmUiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiQ29uZGl0aW9uIjogewogICAgICAgICAgICAgICAgIkluIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbnMiOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJTb3VyY2UiOiAiYSIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJLZXkiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAiVmFsdWVzIjogWwogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIidMYXN0IFJlZnJlc2gnIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICAiaG93Q3JlYXRlZCI6ICJVc2VyIgogICAgICB9CiAgICBdCiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/32b08d7f32cb5f9816cc/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiMzJiMDhkN2YzMmNiNWY5ODE2Y2MiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogNTIxLjAzMDIzNTE2MjM3NDA4LAogICAgInkiOiAyMDcuODM4NzQ1ODAwNjcxODksCiAgICAieiI6IDUwMDAsCiAgICAiaGVpZ2h0IjogMjcyLjM0MDQyNTUzMTkxNDg5LAogICAgIndpZHRoIjogMzEzLjE5MTQ4OTM2MTcwMjExLAogICAgInRhYk9yZGVyIjogNTAwMAogIH0sCiAgInZpc3VhbCI6IHsKICAgICJ2aXN1YWxUeXBlIjogImJhckNoYXJ0IiwKICAgICJxdWVyeSI6IHsKICAgICAgInF1ZXJ5U3RhdGUiOiB7CiAgICAgICAgIkNhdGVnb3J5IjogewogICAgICAgICAgInByb2plY3Rpb25zIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiUHJvZHVjdCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJCcmFuZCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJxdWVyeVJlZiI6ICJQcm9kdWN0LkJyYW5kIiwKICAgICAgICAgICAgICAiYWN0aXZlIjogdHJ1ZQogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiUHJvZHVjdCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJQcm9kdWN0IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlByb2R1Y3QuUHJvZHVjdCIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJTZXJpZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJDdXN0b21lciIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJHZW5kZXIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiQ3VzdG9tZXIuR2VuZGVyIgogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICAiWSI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJNZWFzdXJlIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTYWxlcyIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTYWxlcyBBbW91bnQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiTWVhc3VyZSBUYWJsZS5TYWxlcyBBbW91bnQiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJzb3J0RGVmaW5pdGlvbiI6IHsKICAgICAgICAic29ydCI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICJNZWFzdXJlIjogewogICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTYWxlcyIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTYWxlcyBBbW91bnQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGlyZWN0aW9uIjogIkRlc2NlbmRpbmciCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICB9LAogICAgImRyaWxsRmlsdGVyT3RoZXJWaXN1YWxzIjogdHJ1ZQogIH0sCiAgImZpbHRlckNvbmZpZyI6IHsKICAgICJmaWx0ZXJzIjogWwogICAgICB7CiAgICAgICAgIm5hbWUiOiAiRmlsdGVyIiwKICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgIkVudGl0eSI6ICJDYWxlbmRhciIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJZZWFyIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInR5cGUiOiAiQ2F0ZWdvcmljYWwiLAogICAgICAgICJob3dDcmVhdGVkIjogIlVzZXIiCiAgICAgIH0KICAgIF0KICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/4b18758374093c2e23fb/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiNGIxODc1ODM3NDA5M2MyZTIzZmIiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogNzg0LjA1Mzc1MTM5OTc3NiwKICAgICJ5IjogNDk1Ljk0NjI0ODYwMDIyMzk1LAogICAgInoiOiA3MDAwLAogICAgImhlaWdodCI6IDIxMi44NTU1NDMxMTMxMDE5LAogICAgIndpZHRoIjogNDYzLjY5NTQwODczNDYwMjQ5LAogICAgInRhYk9yZGVyIjogNzAwMAogIH0sCiAgInZpc3VhbCI6IHsKICAgICJ2aXN1YWxUeXBlIjogInNjYXR0ZXJDaGFydCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJTZXJpZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTdG9yZSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTdG9yZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJxdWVyeVJlZiI6ICJTdG9yZS5TdG9yZSIKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgIlNpemUiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU2FsZXMiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiIyBDdXN0b21lcnMgKHdpdGggU2FsZXMpIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlNhbGVzLiMgQ3VzdG9tZXJzICh3aXRoIFNhbGVzKSIKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgIlgiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJDYWxlbmRhciIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJNb250aCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJxdWVyeVJlZiI6ICJDYWxlbmRhci5Nb250aCIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgIlkiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU2FsZXMiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiU2FsZXMgQW1vdW50IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlNhbGVzLlNhbGVzIEFtb3VudCIKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfSwKICAgICAgInNvcnREZWZpbml0aW9uIjogewogICAgICAgICJzb3J0IjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU3RvcmUiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiU3RvcmUiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGlyZWN0aW9uIjogIkRlc2NlbmRpbmciCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICB9LAogICAgImRyaWxsRmlsdGVyT3RoZXJWaXN1YWxzIjogdHJ1ZQogIH0KfQ==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/5acb1caf298449a8acb4/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiNWFjYjFjYWYyOTg0NDlhOGFjYjQiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogMzIsCiAgICAieSI6IDIwOCwKICAgICJ6IjogODAwMCwKICAgICJoZWlnaHQiOiAyNzIsCiAgICAid2lkdGgiOiA0ODAsCiAgICAidGFiT3JkZXIiOiA4MDAwCiAgfSwKICAidmlzdWFsIjogewogICAgInZpc3VhbFR5cGUiOiAiY2x1c3RlcmVkQmFyQ2hhcnQiLAogICAgInF1ZXJ5IjogewogICAgICAicXVlcnlTdGF0ZSI6IHsKICAgICAgICAiQ2F0ZWdvcnkiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJQcm9kdWN0IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIkNhdGVnb3J5IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlByb2R1Y3QuQ2F0ZWdvcnkiLAogICAgICAgICAgICAgICJhY3RpdmUiOiB0cnVlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJQcm9kdWN0IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlN1YmNhdGVnb3J5IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlByb2R1Y3QuU3ViY2F0ZWdvcnkiLAogICAgICAgICAgICAgICJhY3RpdmUiOiBmYWxzZQogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiUHJvZHVjdCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJQcm9kdWN0IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlByb2R1Y3QuUHJvZHVjdCIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJZIjogewogICAgICAgICAgInByb2plY3Rpb25zIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICAgIk1lYXN1cmUiOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIlNhbGVzIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlNhbGVzIEFtb3VudCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJxdWVyeVJlZiI6ICJNZWFzdXJlIFRhYmxlLlNhbGVzIEFtb3VudCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJNZWFzdXJlIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTYWxlcyIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTYWxlcyBBbW91bnQgKExZKSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJxdWVyeVJlZiI6ICJNZWFzdXJlIFRhYmxlLlNhbGVzIEFtb3VudCAobHkpIgogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9LAogICAgICAic29ydERlZmluaXRpb24iOiB7CiAgICAgICAgInNvcnQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU2FsZXMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiU2FsZXMgQW1vdW50IgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRpcmVjdGlvbiI6ICJEZXNjZW5kaW5nIgogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/9472f90b5973fdfeb1a9/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiOTQ3MmY5MGI1OTczZmRmZWIxYTkiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogNDgwLjE2Mzc2NjYzMjU0ODYzLAogICAgInkiOiA4MC41NzMxODMyMTM5MjAxNiwKICAgICJ6IjogMjAwMCwKICAgICJoZWlnaHQiOiAxMTEuMzYxMzEwMTMzMDYwMzksCiAgICAid2lkdGgiOiAyMjQuMDMyNzUzMzI2NTA5NzIsCiAgICAidGFiT3JkZXIiOiAyMDAwCiAgfSwKICAidmlzdWFsIjogewogICAgInZpc3VhbFR5cGUiOiAiY2FyZCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJWYWx1ZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU2FsZXMiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiU2FsZXMgQW1vdW50IEF2ZyBwZXIgRGF5IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlNhbGVzLlNhbGVzIEFtb3VudCBBdmcgcGVyIERheSIKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfSwKICAgICAgInNvcnREZWZpbml0aW9uIjogewogICAgICAgICJzb3J0IjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgIk1lYXN1cmUiOiB7CiAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIlNhbGVzIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlNhbGVzIEFtb3VudCBBdmcgcGVyIERheSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiRGVzY2VuZGluZyIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJpc0RlZmF1bHRTb3J0IjogdHJ1ZQogICAgICB9CiAgICB9LAogICAgIm9iamVjdHMiOiB7CiAgICAgICJsYWJlbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAic29saWQiOiB7CiAgICAgICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJUaGVtZURhdGFDb2xvciI6IHsKICAgICAgICAgICAgICAgICAgICAgICJDb2xvcklkIjogMCwKICAgICAgICAgICAgICAgICAgICAgICJQZXJjZW50IjogMAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgImZvbnRTaXplIjogewogICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICJWYWx1ZSI6ICIxNkQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdLAogICAgICAiY2F0ZWdvcnlMYWJlbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAic29saWQiOiB7CiAgICAgICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJUaGVtZURhdGFDb2xvciI6IHsKICAgICAgICAgICAgICAgICAgICAgICJDb2xvcklkIjogMCwKICAgICAgICAgICAgICAgICAgICAgICJQZXJjZW50IjogMAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJ2aXN1YWxDb250YWluZXJPYmplY3RzIjogewogICAgICAiYmFja2dyb3VuZCI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogInRydWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgInNvbGlkIjogewogICAgICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICAgICAiVGhlbWVEYXRhQ29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sb3JJZCI6IDQsCiAgICAgICAgICAgICAgICAgICAgICAiUGVyY2VudCI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ0cmFuc3BhcmVuY3kiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIjBEIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgImJvcmRlciI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogImZhbHNlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9LAogICJmaWx0ZXJDb25maWciOiB7CiAgICAiZmlsdGVycyI6IFsKICAgICAgewogICAgICAgICJuYW1lIjogIkZpbHRlcmFjNGU3YTVjZDBjOTczMWE0NzBlIiwKICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTbWFydCBDYWxjcyIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTbWFydCBDYWxjIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInR5cGUiOiAiQ2F0ZWdvcmljYWwiLAogICAgICAgICJmaWx0ZXIiOiB7CiAgICAgICAgICAiVmVyc2lvbiI6IDIsCiAgICAgICAgICAiRnJvbSI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJOYW1lIjogInMiLAogICAgICAgICAgICAgICJFbnRpdHkiOiAiU21hcnQgQ2FsY3MiLAogICAgICAgICAgICAgICJUeXBlIjogMAogICAgICAgICAgICB9CiAgICAgICAgICBdLAogICAgICAgICAgIldoZXJlIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgIkNvbmRpdGlvbiI6IHsKICAgICAgICAgICAgICAgICJJbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb25zIjogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiU291cmNlIjogInMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiU21hcnQgQ2FsYyIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICJWYWx1ZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiJ0xhYmVsIC0g4payIExZJyIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgImhvd0NyZWF0ZWQiOiAiVXNlciIKICAgICAgfQogICAgXQogIH0KfQ==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/8b8727ff328bdc49692c/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiOGI4NzI3ZmYzMjhiZGM0OTY5MmMiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogOTQyLjc5NTY5ODkyNDczMTE0LAogICAgInkiOiA3OS44Mjc5NTY5ODkyNDczMTIsCiAgICAieiI6IDQwMDAsCiAgICAiaGVpZ2h0IjogMTEyLjg2MDIxNTA1Mzc2MzQ0LAogICAgIndpZHRoIjogMzA0LjE3MjA0MzAxMDc1MjcsCiAgICAidGFiT3JkZXIiOiA0MDAwCiAgfSwKICAidmlzdWFsIjogewogICAgInZpc3VhbFR5cGUiOiAic2xpY2VyIiwKICAgICJxdWVyeSI6IHsKICAgICAgInF1ZXJ5U3RhdGUiOiB7CiAgICAgICAgIlZhbHVlcyI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkNhbGVuZGFyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIkRhdGUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiQ2FsZW5kYXIuRGF0ZSIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfSwKICAgICAgInNvcnREZWZpbml0aW9uIjogewogICAgICAgICJzb3J0IjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiQ2FsZW5kYXIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiRGF0ZSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiQXNjZW5kaW5nIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImlzRGVmYXVsdFNvcnQiOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICAidmlzdWFsQ29udGFpbmVyT2JqZWN0cyI6IHsKICAgICAgImJhY2tncm91bmQiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAic29saWQiOiB7CiAgICAgICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJUaGVtZURhdGFDb2xvciI6IHsKICAgICAgICAgICAgICAgICAgICAgICJDb2xvcklkIjogMCwKICAgICAgICAgICAgICAgICAgICAgICJQZXJjZW50IjogLTAuMQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/624827fbb3e3bd2b52a0/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiNjI0ODI3ZmJiM2UzYmQyYjUyYTAiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogNzY1LjgwMzIyNDcyMzk0OSwKICAgICJ5IjogNS4yMzYyNjEzNjU2MzM4Mzk1LAogICAgInoiOiAxMjAwMCwKICAgICJoZWlnaHQiOiA2OC4wNzEzOTc3NTMyMzk5LAogICAgIndpZHRoIjogMjIzLjg1MDE3MzM4MDg0NjYzLAogICAgInRhYk9yZGVyIjogMTIwMDAKICB9LAogICJ2aXN1YWwiOiB7CiAgICAidmlzdWFsVHlwZSI6ICJjYXJkIiwKICAgICJxdWVyeSI6IHsKICAgICAgInF1ZXJ5U3RhdGUiOiB7CiAgICAgICAgIlZhbHVlcyI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJBZ2dyZWdhdGlvbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU2FsZXMiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiRW52aXJvbm1lbnQiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiRnVuY3Rpb24iOiAzCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiTWluKFNhbGVzLkVudmlyb25tZW50KSIKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJvYmplY3RzIjogewogICAgICAibGFiZWxzIjogWwogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiZm9udFNpemUiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIjIwRCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJjYXRlZ29yeUxhYmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogImZhbHNlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/bf50a0a6082015e4bcfe/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiYmY1MGEwYTYwODIwMTVlNGJjZmUiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogNzAyLjg4NjM4Njg5ODY2OTM0LAogICAgInkiOiA4MC41NzMxODMyMTM5MjAxNiwKICAgICJ6IjogMzAwMCwKICAgICJoZWlnaHQiOiAxMTEuMzYxMzEwMTMzMDYwMzksCiAgICAid2lkdGgiOiAyMjQuMDMyNzUzMzI2NTA5NzIsCiAgICAidGFiT3JkZXIiOiAzMDAwCiAgfSwKICAidmlzdWFsIjogewogICAgInZpc3VhbFR5cGUiOiAiY2FyZCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJWYWx1ZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU2FsZXMiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiIyBDdXN0b21lcnMgKHdpdGggU2FsZXMpIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIlNhbGVzLiMgQ3VzdG9tZXJzICh3aXRoIFNhbGVzKSIsCiAgICAgICAgICAgICAgImRpc3BsYXlOYW1lIjogIiMgQ3VzdG9tZXJzIgogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9LAogICAgICAic29ydERlZmluaXRpb24iOiB7CiAgICAgICAgInNvcnQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU2FsZXMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiIyBDdXN0b21lcnMgKHdpdGggU2FsZXMpIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRpcmVjdGlvbiI6ICJEZXNjZW5kaW5nIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImlzRGVmYXVsdFNvcnQiOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICAib2JqZWN0cyI6IHsKICAgICAgImxhYmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICJzb2xpZCI6IHsKICAgICAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAgICAgIlRoZW1lRGF0YUNvbG9yIjogewogICAgICAgICAgICAgICAgICAgICAgIkNvbG9ySWQiOiAwLAogICAgICAgICAgICAgICAgICAgICAgIlBlcmNlbnQiOiAwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZm9udFNpemUiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIjE2RCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJjYXRlZ29yeUxhYmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICJzb2xpZCI6IHsKICAgICAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAgICAgIlRoZW1lRGF0YUNvbG9yIjogewogICAgICAgICAgICAgICAgICAgICAgIkNvbG9ySWQiOiAwLAogICAgICAgICAgICAgICAgICAgICAgIlBlcmNlbnQiOiAwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgInZpc3VhbENvbnRhaW5lck9iamVjdHMiOiB7CiAgICAgICJiYWNrZ3JvdW5kIjogWwogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAic2hvdyI6IHsKICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICJMaXRlcmFsIjogewogICAgICAgICAgICAgICAgICAiVmFsdWUiOiAidHJ1ZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAic29saWQiOiB7CiAgICAgICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJUaGVtZURhdGFDb2xvciI6IHsKICAgICAgICAgICAgICAgICAgICAgICJDb2xvcklkIjogNSwKICAgICAgICAgICAgICAgICAgICAgICJQZXJjZW50IjogMAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgInRyYW5zcGFyZW5jeSI6IHsKICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICJMaXRlcmFsIjogewogICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiMEQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdLAogICAgICAiYm9yZGVyIjogWwogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAic2hvdyI6IHsKICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICJMaXRlcmFsIjogewogICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiZmFsc2UiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgImRyaWxsRmlsdGVyT3RoZXJWaXN1YWxzIjogdHJ1ZQogIH0sCiAgImZpbHRlckNvbmZpZyI6IHsKICAgICJmaWx0ZXJzIjogWwogICAgICB7CiAgICAgICAgIm5hbWUiOiAiRmlsdGVyMmJjOGU1ZTBiNmFiMjEyNjAwNWUiLAogICAgICAgICJvcmRpbmFsIjogMCwKICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU2FsZXMiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiUHJvcGVydHkiOiAiU2FsZXMgUXR5IgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInR5cGUiOiAiQWR2YW5jZWQiLAogICAgICAgICJob3dDcmVhdGVkIjogIlVzZXIiCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJGaWx0ZXIwZjIxYmFkZDA4NGEwNDllMDY2MyIsCiAgICAgICAgIm9yZGluYWwiOiAxLAogICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICJNZWFzdXJlIjogewogICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTYWxlcyIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTYWxlcyBBbW91bnQgQXZnIHBlciBEYXkiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAidHlwZSI6ICJBZHZhbmNlZCIsCiAgICAgICAgImhvd0NyZWF0ZWQiOiAiVXNlciIKICAgICAgfSwKICAgICAgewogICAgICAgICJuYW1lIjogIkZpbHRlcmYzMjE5NjhlM2RjOGFhNWQyNzkxIiwKICAgICAgICAib3JkaW5hbCI6IDIsCiAgICAgICAgImZpZWxkIjogewogICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU21hcnQgQ2FsY3MiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiUHJvcGVydHkiOiAiU21hcnQgQ2FsYyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJ0eXBlIjogIkNhdGVnb3JpY2FsIiwKICAgICAgICAiZmlsdGVyIjogewogICAgICAgICAgIlZlcnNpb24iOiAyLAogICAgICAgICAgIkZyb20iOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiTmFtZSI6ICJzIiwKICAgICAgICAgICAgICAiRW50aXR5IjogIlNtYXJ0IENhbGNzIiwKICAgICAgICAgICAgICAiVHlwZSI6IDAKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgICJXaGVyZSI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJDb25kaXRpb24iOiB7CiAgICAgICAgICAgICAgICAiSW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9ucyI6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgIlNvdXJjZSI6ICJzIgogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlNtYXJ0IENhbGMiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAiVmFsdWVzIjogWwogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIidMYWJlbCAtIOKWsiBMWSciCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJob3dDcmVhdGVkIjogIlVzZXIiLAogICAgICAgICJvYmplY3RzIjogewogICAgICAgICAgImdlbmVyYWwiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAicHJvcGVydGllcyI6IHt9CiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0KICAgIF0sCiAgICAiZmlsdGVyU29ydE9yZGVyIjogIkN1c3RvbSIKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/c258740674a8a53d2c4c/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiYzI1ODc0MDY3NGE4YTUzZDJjNGMiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogMzIuMDk4MjU5OTc5NTI5MTY4LAogICAgInkiOiA4MC41NzMxODMyMTM5MjAxNiwKICAgICJ6IjogMCwKICAgICJoZWlnaHQiOiAxMTEuMzYxMzEwMTMzMDYwMzksCiAgICAid2lkdGgiOiAyMjQuMDMyNzUzMzI2NTA5NzIsCiAgICAidGFiT3JkZXIiOiAwCiAgfSwKICAidmlzdWFsIjogewogICAgInZpc3VhbFR5cGUiOiAiY2FyZCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJWYWx1ZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiU2FsZXMiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiU2FsZXMgQW1vdW50IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIk1lYXN1cmUgVGFibGUuU2FsZXMgQW1vdW50IgogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9LAogICAgICAic29ydERlZmluaXRpb24iOiB7CiAgICAgICAgInNvcnQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAiQWdncmVnYXRpb24iOiB7CiAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiQ2FsZW5kYXIiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiWWVhciIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJGdW5jdGlvbiI6IDIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiRGVzY2VuZGluZyIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJpc0RlZmF1bHRTb3J0IjogdHJ1ZQogICAgICB9CiAgICB9LAogICAgIm9iamVjdHMiOiB7CiAgICAgICJjYXRlZ29yeUxhYmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICJzb2xpZCI6IHsKICAgICAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAgICAgIlRoZW1lRGF0YUNvbG9yIjogewogICAgICAgICAgICAgICAgICAgICAgIkNvbG9ySWQiOiAwLAogICAgICAgICAgICAgICAgICAgICAgIlBlcmNlbnQiOiAwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdLAogICAgICAibGFiZWxzIjogWwogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgInNvbGlkIjogewogICAgICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICAgICAiVGhlbWVEYXRhQ29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sb3JJZCI6IDAsCiAgICAgICAgICAgICAgICAgICAgICAiUGVyY2VudCI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJmb250U2l6ZSI6IHsKICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICJMaXRlcmFsIjogewogICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiMTZEIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJ2aXN1YWxDb250YWluZXJPYmplY3RzIjogewogICAgICAiYmFja2dyb3VuZCI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogInRydWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgInNvbGlkIjogewogICAgICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICAgICAiVGhlbWVEYXRhQ29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sb3JJZCI6IDIsCiAgICAgICAgICAgICAgICAgICAgICAiUGVyY2VudCI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ0cmFuc3BhcmVuY3kiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIjBEIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgImJvcmRlciI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogImZhbHNlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9LAogICJmaWx0ZXJDb25maWciOiB7CiAgICAiZmlsdGVycyI6IFsKICAgICAgewogICAgICAgICJuYW1lIjogIkZpbHRlcjdhNjNiYTQ3MjVkOTA3NDM0OTkxIiwKICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTbWFydCBDYWxjcyIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTbWFydCBDYWxjIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInR5cGUiOiAiQ2F0ZWdvcmljYWwiLAogICAgICAgICJmaWx0ZXIiOiB7CiAgICAgICAgICAiVmVyc2lvbiI6IDIsCiAgICAgICAgICAiRnJvbSI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJOYW1lIjogInMiLAogICAgICAgICAgICAgICJFbnRpdHkiOiAiU21hcnQgQ2FsY3MiLAogICAgICAgICAgICAgICJUeXBlIjogMAogICAgICAgICAgICB9CiAgICAgICAgICBdLAogICAgICAgICAgIldoZXJlIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgIkNvbmRpdGlvbiI6IHsKICAgICAgICAgICAgICAgICJJbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb25zIjogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiU291cmNlIjogInMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiU21hcnQgQ2FsYyIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICJWYWx1ZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiJ0xhYmVsIC0g4payIExZJyIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgImhvd0NyZWF0ZWQiOiAiVXNlciIKICAgICAgfQogICAgXQogIH0KfQ==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/0f9bcdc145fc9e6fdc33/mobile.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lck1vYmlsZVN0YXRlLzEuMi4wL3NjaGVtYS5qc29uIiwKICAicG9zaXRpb24iOiB7CiAgICAieCI6IDAsCiAgICAieSI6IDI0MCwKICAgICJoZWlnaHQiOiAxMjAsCiAgICAid2lkdGgiOiAzMjQKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/eb5c360e357e8b54eb88/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiZWI1YzM2MGUzNTdlOGI1NGViODgiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogMzEuNjU1OTEzOTc4NDk0NjI0LAogICAgInkiOiA4LjI1ODA2NDUxNjEyOTAzMiwKICAgICJ6IjogMTAwMDAsCiAgICAiaGVpZ2h0IjogNjEuOTM1NDgzODcwOTY3NzQ0LAogICAgIndpZHRoIjogMjQwLjg2MDIxNTA1Mzc2MzQ1LAogICAgInRhYk9yZGVyIjogMTAwMDAKICB9LAogICJ2aXN1YWwiOiB7CiAgICAidmlzdWFsVHlwZSI6ICJ0ZXh0Ym94IiwKICAgICJvYmplY3RzIjogewogICAgICAiZ2VuZXJhbCI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInBhcmFncmFwaHMiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgInRleHRSdW5zIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIlNhbGVzIEFuYWx5c2lzIiwKICAgICAgICAgICAgICAgICAgICAidGV4dFN0eWxlIjogewogICAgICAgICAgICAgICAgICAgICAgImZvbnRGYW1pbHkiOiAiU2Vnb2UgKEJvbGQpIiwKICAgICAgICAgICAgICAgICAgICAgICJmb250U2l6ZSI6ICIyNHB0IiwKICAgICAgICAgICAgICAgICAgICAgICJjb2xvciI6ICIjMDAwMDAwIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJ2aXN1YWxDb250YWluZXJPYmplY3RzIjogewogICAgICAiYmFja2dyb3VuZCI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogInRydWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgInNvbGlkIjogewogICAgICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICAgICAiVGhlbWVEYXRhQ29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sb3JJZCI6IDAsCiAgICAgICAgICAgICAgICAgICAgICAiUGVyY2VudCI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICAiZHJpbGxGaWx0ZXJPdGhlclZpc3VhbHMiOiB0cnVlCiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/16d45d719c3475decb7f/mobile.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lck1vYmlsZVN0YXRlLzEuMi4wL3NjaGVtYS5qc29uIiwKICAicG9zaXRpb24iOiB7CiAgICAieCI6IDAsCiAgICAieSI6IDY2MCwKICAgICJoZWlnaHQiOiAxODAsCiAgICAid2lkdGgiOiAzMjQKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/32b08d7f32cb5f9816cc/mobile.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lck1vYmlsZVN0YXRlLzEuMi4wL3NjaGVtYS5qc29uIiwKICAicG9zaXRpb24iOiB7CiAgICAieCI6IDAsCiAgICAieSI6IDE4NjAsCiAgICAiaGVpZ2h0IjogNDIwLAogICAgIndpZHRoIjogMzI0CiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/8b8727ff328bdc49692c/mobile.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lck1vYmlsZVN0YXRlLzEuMi4wL3NjaGVtYS5qc29uIiwKICAicG9zaXRpb24iOiB7CiAgICAieCI6IDAsCiAgICAieSI6IDkwMCwKICAgICJoZWlnaHQiOiAxMjAsCiAgICAid2lkdGgiOiAzMjQKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/5acb1caf298449a8acb4/mobile.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lck1vYmlsZVN0YXRlLzEuMi4wL3NjaGVtYS5qc29uIiwKICAicG9zaXRpb24iOiB7CiAgICAieCI6IDAsCiAgICAieSI6IDE1MDAsCiAgICAiaGVpZ2h0IjogMzAwLAogICAgIndpZHRoIjogMzI0CiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/484fbdd73143c5bf71fa/mobile.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lck1vYmlsZVN0YXRlLzEuMi4wL3NjaGVtYS5qc29uIiwKICAicG9zaXRpb24iOiB7CiAgICAieCI6IDAsCiAgICAieSI6IDEyMDAsCiAgICAiaGVpZ2h0IjogMjQwLAogICAgIndpZHRoIjogMzI0CiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/9472f90b5973fdfeb1a9/mobile.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lck1vYmlsZVN0YXRlLzEuMi4wL3NjaGVtYS5qc29uIiwKICAicG9zaXRpb24iOiB7CiAgICAieCI6IDAsCiAgICAieSI6IDM2MCwKICAgICJoZWlnaHQiOiAxMjAsCiAgICAid2lkdGgiOiAzMjQKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/c258740674a8a53d2c4c/mobile.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lck1vYmlsZVN0YXRlLzEuMi4wL3NjaGVtYS5qc29uIiwKICAicG9zaXRpb24iOiB7CiAgICAieCI6IDAsCiAgICAieSI6IDEyMCwKICAgICJoZWlnaHQiOiAxMjAsCiAgICAid2lkdGgiOiAzMjQKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/bf50a0a6082015e4bcfe/mobile.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lck1vYmlsZVN0YXRlLzEuMi4wL3NjaGVtYS5qc29uIiwKICAicG9zaXRpb24iOiB7CiAgICAieCI6IDAsCiAgICAieSI6IDQ4MCwKICAgICJoZWlnaHQiOiAxMjAsCiAgICAid2lkdGgiOiAzMjQKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection89a9619c7025093ade1c/visuals/eb5c360e357e8b54eb88/mobile.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lck1vYmlsZVN0YXRlLzEuMi4wL3NjaGVtYS5qc29uIiwKICAicG9zaXRpb24iOiB7CiAgICAieCI6IDAsCiAgICAieSI6IDAsCiAgICAiaGVpZ2h0IjogNjAsCiAgICAid2lkdGgiOiAzMjQKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection8a2d1e93c8442763827c/page.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3BhZ2UvMS4zLjAvc2NoZW1hLmpzb24iLAogICJuYW1lIjogIlJlcG9ydFNlY3Rpb244YTJkMWU5M2M4NDQyNzYzODI3YyIsCiAgImRpc3BsYXlOYW1lIjogIkR5bmFtaWMgTWVhc3VyZSIsCiAgImRpc3BsYXlPcHRpb24iOiAiRml0VG9QYWdlIiwKICAiaGVpZ2h0IjogNzIwLAogICJ3aWR0aCI6IDEyODAsCiAgImZpbHRlckNvbmZpZyI6IHsKICAgICJmaWx0ZXJzIjogWwogICAgICB7CiAgICAgICAgIm5hbWUiOiAiRmlsdGVyNWM4MDlkYzU3ZDg3ODljYmU2YjIiLAogICAgICAgICJvcmRpbmFsIjogMCwKICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgIkVudGl0eSI6ICJTbWFydCBDYWxjcyIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJTbWFydCBDYWxjIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInR5cGUiOiAiQ2F0ZWdvcmljYWwiLAogICAgICAgICJmaWx0ZXIiOiB7CiAgICAgICAgICAiVmVyc2lvbiI6IDIsCiAgICAgICAgICAiRnJvbSI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJOYW1lIjogInMiLAogICAgICAgICAgICAgICJFbnRpdHkiOiAiU21hcnQgQ2FsY3MiLAogICAgICAgICAgICAgICJUeXBlIjogMAogICAgICAgICAgICB9CiAgICAgICAgICBdLAogICAgICAgICAgIldoZXJlIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgIkNvbmRpdGlvbiI6IHsKICAgICAgICAgICAgICAgICJJbiI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb25zIjogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiU291cmNlIjogInMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiU21hcnQgQ2FsYyIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICJWYWx1ZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiJ0R5bmFtaWMgTWVhc3VyZSAtIEFwcGx5IEZvcm1hdCciCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJob3dDcmVhdGVkIjogIlVzZXIiLAogICAgICAgICJpc0hpZGRlbkluVmlld01vZGUiOiB0cnVlLAogICAgICAgICJpc0xvY2tlZEluVmlld01vZGUiOiB0cnVlCiAgICAgIH0KICAgIF0sCiAgICAiZmlsdGVyU29ydE9yZGVyIjogIkN1c3RvbSIKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection8a2d1e93c8442763827c/visuals/469bc55e70ada4022984/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiNDY5YmM1NWU3MGFkYTQwMjI5ODQiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogNzAyLjM3Mjg4MTM1NTkzMjEyLAogICAgInkiOiA4MCwKICAgICJ6IjogMzAwMCwKICAgICJoZWlnaHQiOiAxMTIuNTQyMzcyODgxMzU1OTMsCiAgICAid2lkdGgiOiAyMjUuMDg0NzQ1NzYyNzExODYsCiAgICAidGFiT3JkZXIiOiAzMDAwCiAgfSwKICAidmlzdWFsIjogewogICAgInZpc3VhbFR5cGUiOiAiY2FyZCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJWYWx1ZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiRHluYW1pYyBNZWFzdXJlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlZhbHVlICUgKM6UIGx5KSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJxdWVyeVJlZiI6ICJEeW5hbWljIE1lYXN1cmUuVmFsdWUgJSAozpQgbHkpIgogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9LAogICAgICAic29ydERlZmluaXRpb24iOiB7CiAgICAgICAgInNvcnQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiRHluYW1pYyBNZWFzdXJlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlZhbHVlICUgKM6UIGx5KSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiRGVzY2VuZGluZyIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJpc0RlZmF1bHRTb3J0IjogdHJ1ZQogICAgICB9CiAgICB9LAogICAgIm9iamVjdHMiOiB7CiAgICAgICJsYWJlbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAic29saWQiOiB7CiAgICAgICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJUaGVtZURhdGFDb2xvciI6IHsKICAgICAgICAgICAgICAgICAgICAgICJDb2xvcklkIjogMCwKICAgICAgICAgICAgICAgICAgICAgICJQZXJjZW50IjogMAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgImZvbnRTaXplIjogewogICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICJWYWx1ZSI6ICIyMEQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdLAogICAgICAiY2F0ZWdvcnlMYWJlbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAic29saWQiOiB7CiAgICAgICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJUaGVtZURhdGFDb2xvciI6IHsKICAgICAgICAgICAgICAgICAgICAgICJDb2xvcklkIjogMCwKICAgICAgICAgICAgICAgICAgICAgICJQZXJjZW50IjogMAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJ2aXN1YWxDb250YWluZXJPYmplY3RzIjogewogICAgICAiYmFja2dyb3VuZCI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogInRydWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgInNvbGlkIjogewogICAgICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICAgICAiVGhlbWVEYXRhQ29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sb3JJZCI6IDUsCiAgICAgICAgICAgICAgICAgICAgICAiUGVyY2VudCI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ0cmFuc3BhcmVuY3kiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIjBEIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgImJvcmRlciI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogImZhbHNlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgInRpdGxlIjogWwogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAidGl0bGVXcmFwIjogewogICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICJWYWx1ZSI6ICJ0cnVlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection8a2d1e93c8442763827c/visuals/cedd897ce35c9089630c/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiY2VkZDg5N2NlMzVjOTA4OTYzMGMiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogOTQyLjQ0MTIwOTQwNjQ5NSwKICAgICJ5IjogODAuMjY4NzU2OTk4ODgwMTc4LAogICAgInoiOiA0MDAwLAogICAgImhlaWdodCI6IDExMi41MTk1OTY4NjQ1MDE2OCwKICAgICJ3aWR0aCI6IDMxMi40NzQ4MDQwMzEzNTUsCiAgICAidGFiT3JkZXIiOiA0MDAwCiAgfSwKICAidmlzdWFsIjogewogICAgInZpc3VhbFR5cGUiOiAic2xpY2VyIiwKICAgICJxdWVyeSI6IHsKICAgICAgInF1ZXJ5U3RhdGUiOiB7CiAgICAgICAgIlZhbHVlcyI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkNhbGVuZGFyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIkRhdGUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiQ2FsZW5kYXIuRGF0ZSIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfSwKICAgICAgInNvcnREZWZpbml0aW9uIjogewogICAgICAgICJzb3J0IjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiQ2FsZW5kYXIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiRGF0ZSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiQXNjZW5kaW5nIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImlzRGVmYXVsdFNvcnQiOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICAidmlzdWFsQ29udGFpbmVyT2JqZWN0cyI6IHsKICAgICAgImJhY2tncm91bmQiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAic29saWQiOiB7CiAgICAgICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJUaGVtZURhdGFDb2xvciI6IHsKICAgICAgICAgICAgICAgICAgICAgICJDb2xvcklkIjogMCwKICAgICAgICAgICAgICAgICAgICAgICJQZXJjZW50IjogLTAuMQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection8a2d1e93c8442763827c/visuals/b1acdc3d6014876e1960/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiYjFhY2RjM2Q2MDE0ODc2ZTE5NjAiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogMzIuNTQyMzcyODgxMzU1OTMxLAogICAgInkiOiA4MCwKICAgICJ6IjogMCwKICAgICJoZWlnaHQiOiAxMTIuNTQyMzcyODgxMzU1OTMsCiAgICAid2lkdGgiOiAyMjMuNzI4ODEzNTU5MzIyMDIsCiAgICAidGFiT3JkZXIiOiAwCiAgfSwKICAidmlzdWFsIjogewogICAgInZpc3VhbFR5cGUiOiAiY2FyZCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJWYWx1ZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiRHluYW1pYyBNZWFzdXJlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlZhbHVlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIkR5bmFtaWMgTWVhc3VyZS5WYWx1ZSIKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfSwKICAgICAgInNvcnREZWZpbml0aW9uIjogewogICAgICAgICJzb3J0IjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgIk1lYXN1cmUiOiB7CiAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkR5bmFtaWMgTWVhc3VyZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJWYWx1ZSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiRGVzY2VuZGluZyIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJpc0RlZmF1bHRTb3J0IjogdHJ1ZQogICAgICB9CiAgICB9LAogICAgIm9iamVjdHMiOiB7CiAgICAgICJjYXRlZ29yeUxhYmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICJzb2xpZCI6IHsKICAgICAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAgICAgIlRoZW1lRGF0YUNvbG9yIjogewogICAgICAgICAgICAgICAgICAgICAgIkNvbG9ySWQiOiAwLAogICAgICAgICAgICAgICAgICAgICAgIlBlcmNlbnQiOiAwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdLAogICAgICAibGFiZWxzIjogWwogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgInNvbGlkIjogewogICAgICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICAgICAiVGhlbWVEYXRhQ29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sb3JJZCI6IDAsCiAgICAgICAgICAgICAgICAgICAgICAiUGVyY2VudCI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJmb250U2l6ZSI6IHsKICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICJMaXRlcmFsIjogewogICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiMjBEIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJ2aXN1YWxDb250YWluZXJPYmplY3RzIjogewogICAgICAiYmFja2dyb3VuZCI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogInRydWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgInNvbGlkIjogewogICAgICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICAgICAiVGhlbWVEYXRhQ29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sb3JJZCI6IDIsCiAgICAgICAgICAgICAgICAgICAgICAiUGVyY2VudCI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ0cmFuc3BhcmVuY3kiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIjBEIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgImJvcmRlciI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogImZhbHNlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection8a2d1e93c8442763827c/visuals/8e729be52dab6a0bd956/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiOGU3MjliZTUyZGFiNmEwYmQ5NTYiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogMjU2LjI3MTE4NjQ0MDY3NzkyLAogICAgInkiOiA4MCwKICAgICJ6IjogMTAwMCwKICAgICJoZWlnaHQiOiAxMTIuNTQyMzcyODgxMzU1OTMsCiAgICAid2lkdGgiOiAyMjMuNzI4ODEzNTU5MzIyMDIsCiAgICAidGFiT3JkZXIiOiAxMDAwCiAgfSwKICAidmlzdWFsIjogewogICAgInZpc3VhbFR5cGUiOiAiY2FyZCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJWYWx1ZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiRHluYW1pYyBNZWFzdXJlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlZhbHVlIChseSkiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiRHluYW1pYyBNZWFzdXJlLlZhbHVlIChseSkiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJzb3J0RGVmaW5pdGlvbiI6IHsKICAgICAgICAic29ydCI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICJNZWFzdXJlIjogewogICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJEeW5hbWljIE1lYXN1cmUiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiVmFsdWUgKGx5KSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiRGVzY2VuZGluZyIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJpc0RlZmF1bHRTb3J0IjogdHJ1ZQogICAgICB9CiAgICB9LAogICAgIm9iamVjdHMiOiB7CiAgICAgICJsYWJlbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAic29saWQiOiB7CiAgICAgICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJUaGVtZURhdGFDb2xvciI6IHsKICAgICAgICAgICAgICAgICAgICAgICJDb2xvcklkIjogMCwKICAgICAgICAgICAgICAgICAgICAgICJQZXJjZW50IjogMAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgImZvbnRTaXplIjogewogICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICJWYWx1ZSI6ICIyMEQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdLAogICAgICAiY2F0ZWdvcnlMYWJlbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAic29saWQiOiB7CiAgICAgICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgICAgICJUaGVtZURhdGFDb2xvciI6IHsKICAgICAgICAgICAgICAgICAgICAgICJDb2xvcklkIjogMCwKICAgICAgICAgICAgICAgICAgICAgICJQZXJjZW50IjogMAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJ2aXN1YWxDb250YWluZXJPYmplY3RzIjogewogICAgICAiYmFja2dyb3VuZCI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogInRydWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgInNvbGlkIjogewogICAgICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICAgICAiVGhlbWVEYXRhQ29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sb3JJZCI6IDMsCiAgICAgICAgICAgICAgICAgICAgICAiUGVyY2VudCI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ0cmFuc3BhcmVuY3kiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIjBEIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgImJvcmRlciI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogImZhbHNlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgInRpdGxlIjogWwogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAidGl0bGVXcmFwIjogewogICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICJWYWx1ZSI6ICJ0cnVlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection8a2d1e93c8442763827c/visuals/836c673550db49514e6b/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiODM2YzY3MzU1MGRiNDk1MTRlNmIiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogNDc5Ljk5OTk5OTk5OTk5OTk0LAogICAgInkiOiA4MCwKICAgICJ6IjogMjAwMCwKICAgICJoZWlnaHQiOiAxMTIuNTQyMzcyODgxMzU1OTMsCiAgICAid2lkdGgiOiAyMjMuNzI4ODEzNTU5MzIyMDIsCiAgICAidGFiT3JkZXIiOiAyMDAwCiAgfSwKICAidmlzdWFsIjogewogICAgInZpc3VhbFR5cGUiOiAiY2FyZCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJWYWx1ZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiRHluYW1pYyBNZWFzdXJlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlZhbHVlIEF2ZyBwZXIgTW9udGgiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiRHluYW1pYyBNZWFzdXJlLlZhbHVlIEF2ZyBwZXIgTW9udGgiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJzb3J0RGVmaW5pdGlvbiI6IHsKICAgICAgICAic29ydCI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICJNZWFzdXJlIjogewogICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJEeW5hbWljIE1lYXN1cmUiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiVmFsdWUgQXZnIHBlciBNb250aCIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiRGVzY2VuZGluZyIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJpc0RlZmF1bHRTb3J0IjogdHJ1ZQogICAgICB9CiAgICB9LAogICAgIm9iamVjdHMiOiB7CiAgICAgICJjYXRlZ29yeUxhYmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICJzb2xpZCI6IHsKICAgICAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAgICAgIlRoZW1lRGF0YUNvbG9yIjogewogICAgICAgICAgICAgICAgICAgICAgIkNvbG9ySWQiOiAwLAogICAgICAgICAgICAgICAgICAgICAgIlBlcmNlbnQiOiAwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdLAogICAgICAibGFiZWxzIjogWwogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgInNvbGlkIjogewogICAgICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICAgICAiVGhlbWVEYXRhQ29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sb3JJZCI6IDAsCiAgICAgICAgICAgICAgICAgICAgICAiUGVyY2VudCI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJmb250U2l6ZSI6IHsKICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICJMaXRlcmFsIjogewogICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiMjBEIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJ2aXN1YWxDb250YWluZXJPYmplY3RzIjogewogICAgICAiYmFja2dyb3VuZCI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogInRydWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sb3IiOiB7CiAgICAgICAgICAgICAgInNvbGlkIjogewogICAgICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICAgICAiVGhlbWVEYXRhQ29sb3IiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiQ29sb3JJZCI6IDQsCiAgICAgICAgICAgICAgICAgICAgICAiUGVyY2VudCI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ0cmFuc3BhcmVuY3kiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIjBEIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgImJvcmRlciI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogImZhbHNlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgInRpdGxlIjogWwogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAidGl0bGVXcmFwIjogewogICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICJWYWx1ZSI6ICJ0cnVlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection8a2d1e93c8442763827c/visuals/6f9803040a3195450ea1/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiNmY5ODAzMDQwYTMxOTU0NTBlYTEiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogMzIuMjUwODM5ODY1NjIxNSwKICAgICJ5IjogNDE2LjM5NDE3NjkzMTY5MDk0LAogICAgInoiOiA2MDAwLAogICAgImhlaWdodCI6IDI4OS41NDA4NzM0NjAyNDYzNiwKICAgICJ3aWR0aCI6IDY3Mi4yNTA4Mzk4NjU2MjE1MSwKICAgICJ0YWJPcmRlciI6IDYwMDAKICB9LAogICJ2aXN1YWwiOiB7CiAgICAidmlzdWFsVHlwZSI6ICJiYXJDaGFydCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJDYXRlZ29yeSI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIlByb2R1Y3QiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiQ2F0ZWdvcnkiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiUHJvZHVjdC5DYXRlZ29yeSIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJQcm9kdWN0IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlByb2R1Y3QiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiUHJvZHVjdC5Qcm9kdWN0IiwKICAgICAgICAgICAgICAiYWN0aXZlIjogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICAiWSI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJNZWFzdXJlIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJEeW5hbWljIE1lYXN1cmUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiVmFsdWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiRHluYW1pYyBNZWFzdXJlLlZhbHVlIgogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9LAogICAgICAic29ydERlZmluaXRpb24iOiB7CiAgICAgICAgInNvcnQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiRHluYW1pYyBNZWFzdXJlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlZhbHVlIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRpcmVjdGlvbiI6ICJEZXNjZW5kaW5nIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImlzRGVmYXVsdFNvcnQiOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICAiZHJpbGxGaWx0ZXJPdGhlclZpc3VhbHMiOiB0cnVlCiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection8a2d1e93c8442763827c/visuals/e859ee4d7c5b10e836d6/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiZTg1OWVlNGQ3YzViMTBlODM2ZDYiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogMzEuNDE5NDIzNjkyNjM2MDczLAogICAgInkiOiAyMDcuNjQxNDA4NzUxMzM0MDQsCiAgICAieiI6IDUwMDAsCiAgICAiaGVpZ2h0IjogMTkxLjI0ODY2NTk1NTE3NjA4LAogICAgIndpZHRoIjogNjcyLjEwMjQ1NDY0MjQ3NiwKICAgICJ0YWJPcmRlciI6IDUwMDAKICB9LAogICJ2aXN1YWwiOiB7CiAgICAidmlzdWFsVHlwZSI6ICJsaW5lQ2hhcnQiLAogICAgInF1ZXJ5IjogewogICAgICAicXVlcnlTdGF0ZSI6IHsKICAgICAgICAiQ2F0ZWdvcnkiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJDYWxlbmRhciIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJNb250aCBTdGFydCBEYXRlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIkNhbGVuZGFyLk1vbnRoIFN0YXJ0IERhdGUiLAogICAgICAgICAgICAgICJhY3RpdmUiOiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJZIjogewogICAgICAgICAgInByb2plY3Rpb25zIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICAgIk1lYXN1cmUiOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkR5bmFtaWMgTWVhc3VyZSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJQcm9wZXJ0eSI6ICJWYWx1ZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJxdWVyeVJlZiI6ICJEeW5hbWljIE1lYXN1cmUuVmFsdWUiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiRHluYW1pYyBNZWFzdXJlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlZhbHVlIChseSkiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiRHluYW1pYyBNZWFzdXJlLlZhbHVlIChseSkiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJZMiI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJNZWFzdXJlIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJEeW5hbWljIE1lYXN1cmUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiVmFsdWUgRGFpbHkgTWF4IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIkR5bmFtaWMgTWVhc3VyZS5WYWx1ZSBEYWlseSBNYXgiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJzb3J0RGVmaW5pdGlvbiI6IHsKICAgICAgICAic29ydCI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpZWxkIjogewogICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkNhbGVuZGFyIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIk1vbnRoIFN0YXJ0IERhdGUiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGlyZWN0aW9uIjogIkFzY2VuZGluZyIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJpc0RlZmF1bHRTb3J0IjogdHJ1ZQogICAgICB9CiAgICB9LAogICAgImRyaWxsRmlsdGVyT3RoZXJWaXN1YWxzIjogdHJ1ZQogIH0KfQ==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection8a2d1e93c8442763827c/visuals/e50725a866c432900b35/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiZTUwNzI1YTg2NmM0MzI5MDBiMzUiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogNzI4Ljc1OTEyNDA4NzU5MTIsCiAgICAieSI6IDQxNi40MzM3ODUxOTI5MDkyOCwKICAgICJ6IjogODAwMCwKICAgICJoZWlnaHQiOiAyODkuNjM1MDM2NDk2MzUwMzIsCiAgICAid2lkdGgiOiA1MjUuODgxMTI2MTczMDk3LAogICAgInRhYk9yZGVyIjogODAwMAogIH0sCiAgInZpc3VhbCI6IHsKICAgICJ2aXN1YWxUeXBlIjogImxpbmVDaGFydCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJDYXRlZ29yeSI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkNhbGVuZGFyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIkRhdGUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiQ2FsZW5kYXIuRGF0ZSIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgIlkiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiRHluYW1pYyBNZWFzdXJlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlZhbHVlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIkR5bmFtaWMgTWVhc3VyZS5WYWx1ZSIKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfSwKICAgICAgInNvcnREZWZpbml0aW9uIjogewogICAgICAgICJzb3J0IjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiQ2FsZW5kYXIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiRGF0ZSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiQXNjZW5kaW5nIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImlzRGVmYXVsdFNvcnQiOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICAiZHJpbGxGaWx0ZXJPdGhlclZpc3VhbHMiOiB0cnVlCiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection8a2d1e93c8442763827c/visuals/f0143b84500069035233/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiZjAxNDNiODQ1MDAwNjkwMzUyMzMiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogNzI4LjE1MjI5NTYzMjY5ODg0LAogICAgInkiOiAyMDcuODM4NzQ1ODAwNjcxODksCiAgICAieiI6IDkwMDAsCiAgICAiaGVpZ2h0IjogMTkxLjM1NDk4MzIwMjY4NzU4LAogICAgIndpZHRoIjogNTI2Ljc2MzcxNzgwNTE1MTE1LAogICAgInRhYk9yZGVyIjogOTAwMAogIH0sCiAgInZpc3VhbCI6IHsKICAgICJ2aXN1YWxUeXBlIjogImFyZWFDaGFydCIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJDYXRlZ29yeSI6IHsKICAgICAgICAgICJwcm9qZWN0aW9ucyI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJmaWVsZCI6IHsKICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiRW50aXR5IjogIkNhbGVuZGFyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIk1vbnRoIFN0YXJ0IERhdGUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAicXVlcnlSZWYiOiAiQ2FsZW5kYXIuTW9udGggU3RhcnQgRGF0ZSIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgIlkiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiTWVhc3VyZSI6IHsKICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb24iOiB7CiAgICAgICAgICAgICAgICAgICAgIlNvdXJjZVJlZiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiRHluYW1pYyBNZWFzdXJlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIlByb3BlcnR5IjogIlZhbHVlICh5dGQpIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInF1ZXJ5UmVmIjogIkR5bmFtaWMgTWVhc3VyZS5WYWx1ZSAoeXRkKSIKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfSwKICAgICAgInNvcnREZWZpbml0aW9uIjogewogICAgICAgICJzb3J0IjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgIkNvbHVtbiI6IHsKICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICJFbnRpdHkiOiAiQ2FsZW5kYXIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiTW9udGggU3RhcnQgRGF0ZSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkaXJlY3Rpb24iOiAiQXNjZW5kaW5nIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImlzRGVmYXVsdFNvcnQiOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICAiZHJpbGxGaWx0ZXJPdGhlclZpc3VhbHMiOiB0cnVlCiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/bookmarks/Bookmarkd2402dab4df672d2c479.bookmark.json",
              "payload": "",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/bookmarks/Bookmark7c19b7211ada7de10c30.bookmark.json",
              "payload": "",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/bookmarks/bookmarks.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL2Jvb2ttYXJrc01ldGFkYXRhLzEuMC4wL3NjaGVtYS5qc29uIiwKICAiaXRlbXMiOiBbCiAgICB7CiAgICAgICJuYW1lIjogIkJvb2ttYXJrN2MxOWI3MjExYWRhN2RlMTBjMzAiCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJCb29rbWFya2QyNDAyZGFiNGRmNjcyZDJjNDc5IgogICAgfQogIF0KfQ==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.Report/definition/pages/ReportSection8a2d1e93c8442763827c/visuals/faf65e012ba31569ae03/visual.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3JlcG9ydC9kZWZpbml0aW9uL3Zpc3VhbENvbnRhaW5lci8xLjUuMC9zY2hlbWEuanNvbiIsCiAgIm5hbWUiOiAiZmFmNjVlMDEyYmEzMTU2OWFlMDMiLAogICJwb3NpdGlvbiI6IHsKICAgICJ4IjogMjUuMDk4MDM5MjE1Njg2Mjc4LAogICAgInkiOiA2Ljc4MzI1Mzg0MjA3NzM3MTYsCiAgICAieiI6IDcwMDAsCiAgICAiaGVpZ2h0IjogNjEuMDQ5Mjg0NTc4Njk2MzQ0LAogICAgIndpZHRoIjogNDU1LjE1NjMzMjgwMzM5MTY1LAogICAgInRhYk9yZGVyIjogNzAwMAogIH0sCiAgInZpc3VhbCI6IHsKICAgICJ2aXN1YWxUeXBlIjogInNsaWNlciIsCiAgICAicXVlcnkiOiB7CiAgICAgICJxdWVyeVN0YXRlIjogewogICAgICAgICJWYWx1ZXMiOiB7CiAgICAgICAgICAicHJvamVjdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiZmllbGQiOiB7CiAgICAgICAgICAgICAgICAiQ29sdW1uIjogewogICAgICAgICAgICAgICAgICAiRXhwcmVzc2lvbiI6IHsKICAgICAgICAgICAgICAgICAgICAiU291cmNlUmVmIjogewogICAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJEeW5hbWljIE1lYXN1cmUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiTWVhc3VyZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJxdWVyeVJlZiI6ICJEeW5hbWljIE1lYXN1cmUuTWVhc3VyZSIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJvYmplY3RzIjogewogICAgICAiZGF0YSI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgIm1vZGUiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIidEcm9wZG93biciCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdLAogICAgICAic2VsZWN0aW9uIjogWwogICAgICAgIHsKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAic3RyaWN0U2luZ2xlU2VsZWN0IjogewogICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICJWYWx1ZSI6ICJ0cnVlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgImdlbmVyYWwiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJmaWx0ZXIiOiB7CiAgICAgICAgICAgICAgImZpbHRlciI6IHsKICAgICAgICAgICAgICAgICJWZXJzaW9uIjogMiwKICAgICAgICAgICAgICAgICJGcm9tIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiAiZCIsCiAgICAgICAgICAgICAgICAgICAgIkVudGl0eSI6ICJEeW5hbWljIE1lYXN1cmUiLAogICAgICAgICAgICAgICAgICAgICJUeXBlIjogMAogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIldoZXJlIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkNvbmRpdGlvbiI6IHsKICAgICAgICAgICAgICAgICAgICAgICJJbiI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgIkV4cHJlc3Npb25zIjogWwogICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJDb2x1bW4iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJFeHByZXNzaW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJTb3VyY2VSZWYiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiU291cmNlIjogImQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUHJvcGVydHkiOiAiTWVhc3VyZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICJWYWx1ZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiJ1NhbGVzIEFtb3VudCciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJoZWFkZXIiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJzaG93IjogewogICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICJWYWx1ZSI6ICJmYWxzZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJpdGVtcyI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInRleHRTaXplIjogewogICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICJWYWx1ZSI6ICIyMEQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZm9udEZhbWlseSI6IHsKICAgICAgICAgICAgICAiZXhwciI6IHsKICAgICAgICAgICAgICAgICJMaXRlcmFsIjogewogICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiJycnU2Vnb2UgVUkgQm9sZCcnLCB3Zl9zZWdvZS11aV9ib2xkLCBoZWx2ZXRpY2EsIGFyaWFsLCBzYW5zLXNlcmlmJyIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJiYWNrZ3JvdW5kIjogewogICAgICAgICAgICAgICJzb2xpZCI6IHsKICAgICAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAgICAgIlRoZW1lRGF0YUNvbG9yIjogewogICAgICAgICAgICAgICAgICAgICAgIkNvbG9ySWQiOiAwLAogICAgICAgICAgICAgICAgICAgICAgIlBlcmNlbnQiOiAwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgInZpc3VhbENvbnRhaW5lck9iamVjdHMiOiB7CiAgICAgICJib3JkZXIiOiBbCiAgICAgICAgewogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJzaG93IjogewogICAgICAgICAgICAgICJleHByIjogewogICAgICAgICAgICAgICAgIkxpdGVyYWwiOiB7CiAgICAgICAgICAgICAgICAgICJWYWx1ZSI6ICJmYWxzZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyYWRpdXMiOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIjVEIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgImNvbG9yIjogewogICAgICAgICAgICAgICJzb2xpZCI6IHsKICAgICAgICAgICAgICAgICJjb2xvciI6IHsKICAgICAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAgICAgIlRoZW1lRGF0YUNvbG9yIjogewogICAgICAgICAgICAgICAgICAgICAgIkNvbG9ySWQiOiAyLAogICAgICAgICAgICAgICAgICAgICAgIlBlcmNlbnQiOiAwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdLAogICAgICAiYmFja2dyb3VuZCI6IFsKICAgICAgICB7CiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInNob3ciOiB7CiAgICAgICAgICAgICAgImV4cHIiOiB7CiAgICAgICAgICAgICAgICAiTGl0ZXJhbCI6IHsKICAgICAgICAgICAgICAgICAgIlZhbHVlIjogImZhbHNlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJkcmlsbEZpbHRlck90aGVyVmlzdWFscyI6IHRydWUKICB9Cn0=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/.platform",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9naXRJbnRlZ3JhdGlvbi9wbGF0Zm9ybVByb3BlcnRpZXMvMi4wLjAvc2NoZW1hLmpzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJ0eXBlIjogIlNlbWFudGljTW9kZWwiLAogICAgImRpc3BsYXlOYW1lIjogIlNhbGVzVjIgMSIKICB9LAogICJjb25maWciOiB7CiAgICAidmVyc2lvbiI6ICIyLjAiLAogICAgImxvZ2ljYWxJZCI6ICI1MjVlNzcwMy1jMjczLWI4YzUtNGVlZS00Yjk3ZGExMmY3N2EiCiAgfQp9",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/tables/Sales.tmdl",
              "payload": "",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/tables/Calendar.tmdl",
              "payload": "",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/tables/Customer.tmdl",
              "payload": "Ly8vIEN1c3RvbWVyIGRhdGEKdGFibGUgQ3VzdG9tZXIKCWxpbmVhZ2VUYWc6IDA0MjI3ZjVhLTBhZWItNDQ0OC1iNWM1LWRiZjNlMjc2ZGE4NQoKCW1lYXN1cmUgJyMgQ3VzdG9tZXJzJyA9IENPVU5UUk9XUygnQ3VzdG9tZXInKQoJCWZvcm1hdFN0cmluZzogIywjIzAKCQlsaW5lYWdlVGFnOiBhOGRjNTY1YS1hYTliLTQwZGMtOTAyYy0xYmEyNTk2YjA5NzcKCgljb2x1bW4gQ3VzdG9tZXJLZXkKCQlkYXRhVHlwZTogaW50NjQKCQlpc0tleQoJCWZvcm1hdFN0cmluZzogMAoJCWlzQXZhaWxhYmxlSW5NZHg6IGZhbHNlCgkJbGluZWFnZVRhZzogOTAxNjYyZWQtZjBhZS00MWY2LTk2YjMtNGFhNjhiYWQxYzdhCgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IEN1c3RvbWVyS2V5CgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIEdlbmRlcgoJCWRhdGFUeXBlOiBzdHJpbmcKCQlsaW5lYWdlVGFnOiA3ZTBjZTVlYi0zZTYzLTQ4NzAtYjMwYS0wMzJmNTE4NjM3NWQKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogR2VuZGVyCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIEN1c3RvbWVyCgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IDg4NDVmOGI1LWIwNjktNDFhMC04YWY4LTEyZTQwMmIxMTNlOQoJCWlzRGVmYXVsdExhYmVsCgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IEN1c3RvbWVyCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIEFkZHJlc3MKCQlkYXRhVHlwZTogc3RyaW5nCgkJbGluZWFnZVRhZzogYWRiZWIwNzQtN2M2Ny00MGVlLWJlMmQtZDQ2Nzc1Y2U1ZTE3CgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IEFkZHJlc3MKCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBBdXRvbWF0aWMKCgljb2x1bW4gQ2l0eQoJCWRhdGFUeXBlOiBzdHJpbmcKCQlsaW5lYWdlVGFnOiBhNzkxZWI4Yy03ZmFiLTQxOGQtODQ0YS1mOGIwOTQ0NTMwMzcKCQlkYXRhQ2F0ZWdvcnk6IENpdHkKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogQ2l0eQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCWNvbHVtbiAnU3RhdGUgQ29kZScKCQlkYXRhVHlwZTogc3RyaW5nCgkJbGluZWFnZVRhZzogMjlkZTNkMTYtZmZmYS00ZjYxLThjMzktYzFhMmEzNmQ3MzdhCgkJZGF0YUNhdGVnb3J5OiBTdGF0ZU9yUHJvdmluY2UKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogU3RhdGUgQ29kZQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCWNvbHVtbiBTdGF0ZQoJCWRhdGFUeXBlOiBzdHJpbmcKCQlsaW5lYWdlVGFnOiA5MjNiNGNjMS02MTM3LTRiYjQtYmNiMi0zYTkwYzVmNzZjNWUKCQlkYXRhQ2F0ZWdvcnk6IFN0YXRlT3JQcm92aW5jZQoJCXN1bW1hcml6ZUJ5OiBub25lCgkJc291cmNlQ29sdW1uOiBTdGF0ZQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCWNvbHVtbiAnWmlwIENvZGUnCgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IDQzOWNlMGVlLTQzN2UtNDc3MC05MGM0LWM0ZDUzZWJmYjM1YgoJCWRhdGFDYXRlZ29yeTogUG9zdGFsQ29kZQoJCXN1bW1hcml6ZUJ5OiBub25lCgkJc291cmNlQ29sdW1uOiBaaXAgQ29kZQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCWNvbHVtbiAnQ291bnRyeSBDb2RlJwoJCWRhdGFUeXBlOiBzdHJpbmcKCQlsaW5lYWdlVGFnOiBmM2VlYTI3OS00MjU1LTQ0NmItOWY4My1mNDBmNjZhYmY2ZDEKCQlkYXRhQ2F0ZWdvcnk6IENvdW50cnkKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogQ291bnRyeSBDb2RlCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIENvdW50cnkKCQlkYXRhVHlwZTogc3RyaW5nCgkJbGluZWFnZVRhZzogOTlhZjQ0YWUtODZlOS00Yjc1LTk4YTMtZTRiNmU1M2ZlODA2CgkJZGF0YUNhdGVnb3J5OiBDb3VudHJ5CgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IENvdW50cnkKCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBBdXRvbWF0aWMKCgljb2x1bW4gQ29udGluZW50CgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IDUzYjg0MGQyLTk2MmMtNDRjNC04NzMzLTZjYzAwM2ZiOWE4MwoJCWRhdGFDYXRlZ29yeTogQ29udGluZW50CgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IENvbnRpbmVudAoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCWNvbHVtbiBCaXJ0aGRheQoJCWRhdGFUeXBlOiBkYXRlVGltZQoJCWZvcm1hdFN0cmluZzogR2VuZXJhbCBEYXRlCgkJbGluZWFnZVRhZzogYWZhNWUxOTEtYzY5MC00NWMxLWE3MjUtNDFjOWQzY2E5NDM0CgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IEJpcnRoZGF5CgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIEFnZQoJCWRhdGFUeXBlOiBpbnQ2NAoJCWZvcm1hdFN0cmluZzogMAoJCWxpbmVhZ2VUYWc6IDVjNDg3MzA5LWMwNjEtNDVlZC1hYTc0LWFiYTRkMjBiZGUzYgoJCXN1bW1hcml6ZUJ5OiBub25lCgkJc291cmNlQ29sdW1uOiBBZ2UKCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBBdXRvbWF0aWMKCglwYXJ0aXRpb24gQ3VzdG9tZXItMzc1N2I4ODYtZTI2Yy00Y2VjLWE1NTAtY2RlZWEzN2I5NGQ0ID0gbQoJCW1vZGU6IGltcG9ydAoJCXNvdXJjZSA9CgkJCQlsZXQKCQkJCSAgICBTb3VyY2UgPSAjIlJBVy1DdXN0b21lciIsCgkJCQkgICAgIyJSZW5hbWVkIENvbHVtbnMiID0gVGFibGUuUmVuYW1lQ29sdW1ucyhTb3VyY2Use3siTmFtZSIsICJDdXN0b21lciJ9fSksCgkJCQkgICAgIyJDaGFuZ2VkIFR5cGUiID0gVGFibGUuVHJhbnNmb3JtQ29sdW1uVHlwZXMoIyJSZW5hbWVkIENvbHVtbnMiLHt7IkN1c3RvbWVyS2V5IiwgSW50NjQuVHlwZX0sIHsiR2VuZGVyIiwgdHlwZSB0ZXh0fSwgeyJDdXN0b21lciIsIHR5cGUgdGV4dH0sIHsiQWRkcmVzcyIsIHR5cGUgdGV4dH0sIHsiQ2l0eSIsIHR5cGUgdGV4dH0sIHsiU3RhdGUgQ29kZSIsIHR5cGUgdGV4dH0sIHsiU3RhdGUiLCB0eXBlIHRleHR9LCB7IlppcCBDb2RlIiwgdHlwZSB0ZXh0fSwgeyJDb3VudHJ5IENvZGUiLCB0eXBlIHRleHR9LCB7IkNvdW50cnkiLCB0eXBlIHRleHR9LCB7IkNvbnRpbmVudCIsIHR5cGUgdGV4dH0sIHsiQmlydGhkYXkiLCB0eXBlIGRhdGV0aW1lfSwgeyJBZ2UiLCBJbnQ2NC5UeXBlfX0pCgkJCQlpbgoJCQkJICAgICMiQ2hhbmdlZCBUeXBlIgoKCWFubm90YXRpb24gUEJJX1Jlc3VsdFR5cGUgPSBUYWJsZQoK",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/tables/Product.tmdl",
              "payload": "Ly8vIFByb2R1Y3QgQ2F0YWxvZwp0YWJsZSBQcm9kdWN0CglsaW5lYWdlVGFnOiBlOTM3NGI5YS1mYWVlLTRmOWUtYjJlNy1kOWFhZmI5ZDZhOTEKCgltZWFzdXJlICcjIFByb2R1Y3RzJyA9IENPVU5UUk9XUygnUHJvZHVjdCcpCgkJZm9ybWF0U3RyaW5nOiAjLCMjMAoJCWxpbmVhZ2VUYWc6IDFmOGYxYTJhLTA2YjYtNDk4OS04YWY3LTIxMjcxOWNmMzYxNwoKCWNvbHVtbiBQcm9kdWN0CgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IGRhNDM1NTg1LTFmOWEtNDRiZC1iYTJjLTM0Yzk4ZjI5OGNmYwoJCWlzRGVmYXVsdExhYmVsCgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IFByb2R1Y3QKCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBBdXRvbWF0aWMKCgljb2x1bW4gUHJvZHVjdEtleQoJCWRhdGFUeXBlOiBpbnQ2NAoJCWlzS2V5CgkJZm9ybWF0U3RyaW5nOiAwCgkJaXNBdmFpbGFibGVJbk1keDogZmFsc2UKCQlsaW5lYWdlVGFnOiA0MTg0ZDUzZS1jZDJkLTRjYmUtYjhjYi0wNGM3MmE3NTBiYzQKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogUHJvZHVjdEtleQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCWNvbHVtbiAnUHJvZHVjdCBDb2RlJwoJCWRhdGFUeXBlOiBzdHJpbmcKCQlsaW5lYWdlVGFnOiBlOWQyMDRhZC03NmQ4LTRkYjktOWQxYS1iOWMwN2E0YjUwYjIKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogUHJvZHVjdCBDb2RlCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIE1hbnVmYWN0dXJlcgoJCWRhdGFUeXBlOiBzdHJpbmcKCQlsaW5lYWdlVGFnOiA1OWU0NWY1MC1mNjhkLTQ0YzMtYmVjZC03MGNjZDVhN2ViN2QKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogTWFudWZhY3R1cmVyCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIEJyYW5kCgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IGE3MWIyMzVkLThmN2UtNDY3OC04NWEzLTk2YTc4ZDY0YmY4NwoJCXN1bW1hcml6ZUJ5OiBub25lCgkJc291cmNlQ29sdW1uOiBCcmFuZAoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCWNvbHVtbiBDb2xvcgoJCWRhdGFUeXBlOiBzdHJpbmcKCQlsaW5lYWdlVGFnOiA3MDU0YjRkMC02ZDkzLTRjOTYtYmU3NC04MDBkMDJkOTZlNDMKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogQ29sb3IKCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBBdXRvbWF0aWMKCgljb2x1bW4gJ1dlaWdodCBVbml0IE1lYXN1cmUnCgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IDc4ZmNmN2M0LTJiNWQtNDViMC1hYmY5LTZlZTNiM2FhMjU1YgoJCXN1bW1hcml6ZUJ5OiBub25lCgkJc291cmNlQ29sdW1uOiBXZWlnaHQgVW5pdCBNZWFzdXJlCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIFdlaWdodAoJCWRhdGFUeXBlOiBkZWNpbWFsCgkJbGluZWFnZVRhZzogYTYyOTliMzYtYmQwNS00YjQxLTg0OTMtZTQ1MzU5YWYyMzdiCgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IFdlaWdodAoKCQljaGFuZ2VkUHJvcGVydHkgPSBEYXRhVHlwZQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCQlhbm5vdGF0aW9uIFBCSV9Gb3JtYXRIaW50ID0geyJpc0dlbmVyYWxOdW1iZXIiOnRydWV9CgoJY29sdW1uICdVbml0IENvc3QnCgkJZGF0YVR5cGU6IGRlY2ltYWwKCQlsaW5lYWdlVGFnOiBmODlmYTNlMy0wNjFkLTQyNjktOGNkMy1hYTZjZTJhNDY0ZDIKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogVW5pdCBDb3N0CgoJCWNoYW5nZWRQcm9wZXJ0eSA9IERhdGFUeXBlCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJCWFubm90YXRpb24gUEJJX0Zvcm1hdEhpbnQgPSB7ImlzR2VuZXJhbE51bWJlciI6dHJ1ZX0KCgljb2x1bW4gJ1VuaXQgUHJpY2UnCgkJZGF0YVR5cGU6IGRlY2ltYWwKCQlsaW5lYWdlVGFnOiBlZjMwMDAyNy1lNGViLTRjN2QtOTc3MC1hYjhmNmRhYjZiMTUKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogVW5pdCBQcmljZQoKCQljaGFuZ2VkUHJvcGVydHkgPSBEYXRhVHlwZQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCQlhbm5vdGF0aW9uIFBCSV9Gb3JtYXRIaW50ID0geyJpc0dlbmVyYWxOdW1iZXIiOnRydWV9CgoJY29sdW1uICdTdWJjYXRlZ29yeSBDb2RlJwoJCWRhdGFUeXBlOiBzdHJpbmcKCQlsaW5lYWdlVGFnOiA3Y2QwOGViOS0yY2FkLTQyNjMtYWU4OC04YzUxMjFhNjhiN2UKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogU3ViY2F0ZWdvcnkgQ29kZQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCWNvbHVtbiBTdWJjYXRlZ29yeQoJCWRhdGFUeXBlOiBzdHJpbmcKCQlsaW5lYWdlVGFnOiAwYTIwOGM2Mi00YmRkLTQ4NzMtYWYxOC1lYmMyODZjNWIzYmIKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogU3ViY2F0ZWdvcnkKCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBBdXRvbWF0aWMKCgljb2x1bW4gJ0NhdGVnb3J5IENvZGUnCgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IGMwZmMyMThhLTVhMDYtNDc1Ny05MTcyLTJkMzAzYTY3ZjNmZgoJCXN1bW1hcml6ZUJ5OiBub25lCgkJc291cmNlQ29sdW1uOiBDYXRlZ29yeSBDb2RlCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIENhdGVnb3J5CgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IDBmNGI5OWNjLWZkYjYtNGYwNC1iN2Q5LWJiZGNmN2IyYzYwMQoJCXN1bW1hcml6ZUJ5OiBub25lCgkJc291cmNlQ29sdW1uOiBDYXRlZ29yeQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCXBhcnRpdGlvbiBQcm9kdWN0LTE3MWY0OGIzLWUwZWEtNGVhMy1iOWEwLWM4YzY3M2ViMDY0OCA9IG0KCQltb2RlOiBpbXBvcnQKCQlzb3VyY2UgPQoJCQkJbGV0CgkJCQkgICAgU291cmNlID0gIyJSQVctUHJvZHVjdCIsCgkJCQkgICAgIyJSZW5hbWVkIENvbHVtbnMiID0gVGFibGUuUmVuYW1lQ29sdW1ucyhTb3VyY2Use3siUHJvZHVjdCBOYW1lIiwgIlByb2R1Y3QifX0pLAoJCQkJICAgICMiQ2hhbmdlZCBUeXBlIiA9IFRhYmxlLlRyYW5zZm9ybUNvbHVtblR5cGVzKCMiUmVuYW1lZCBDb2x1bW5zIix7eyJQcm9kdWN0S2V5IiwgSW50NjQuVHlwZX0sIHsiUHJvZHVjdCBDb2RlIiwgdHlwZSB0ZXh0fSwgeyJQcm9kdWN0IiwgdHlwZSB0ZXh0fSwgeyJNYW51ZmFjdHVyZXIiLCB0eXBlIHRleHR9LCB7IkJyYW5kIiwgdHlwZSB0ZXh0fSwgeyJDb2xvciIsIHR5cGUgdGV4dH0sIHsiV2VpZ2h0IFVuaXQgTWVhc3VyZSIsIHR5cGUgdGV4dH0sIHsiV2VpZ2h0IiwgdHlwZSBudW1iZXJ9LCB7IlVuaXQgQ29zdCIsIHR5cGUgbnVtYmVyfSwgeyJVbml0IFByaWNlIiwgdHlwZSBudW1iZXJ9LCB7IlN1YmNhdGVnb3J5IENvZGUiLCB0eXBlIHRleHR9LCB7IlN1YmNhdGVnb3J5IiwgdHlwZSB0ZXh0fSwgeyJDYXRlZ29yeSBDb2RlIiwgdHlwZSB0ZXh0fSwgeyJDYXRlZ29yeSIsIHR5cGUgdGV4dH19KQoJCQkJaW4KCQkJCSAgICAjIkNoYW5nZWQgVHlwZSIKCglhbm5vdGF0aW9uIFBCSV9SZXN1bHRUeXBlID0gVGFibGUKCg==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/tables/Smart Calcs.tmdl",
              "payload": "dGFibGUgJ1NtYXJ0IENhbGNzJwoJbGluZWFnZVRhZzogZmE3OWIyOGEtNmE5Yy00M2IxLWE3NzUtMDk5ZGFiY2Q0NDI4CgoJY2FsY3VsYXRpb25Hcm91cAoKCQljYWxjdWxhdGlvbkl0ZW0gTm9ybWFsaXplID0gYGBgCgkJCQlWQVIgRGV0YWlsVmFsdWUgPSBTRUxFQ1RFRE1FQVNVUkUoKQoJCQkJCgkJCQlyZXR1cm4gaWYgKERldGFpbFZhbHVlLCAKCQkJCQoJCQkJICAgIFZBUiBNaW5PZkdyb3VwID0gTUlOWChBTExTRUxFQ1RFRCgnQ2FsZW5kYXInKSwgU0VMRUNURURNRUFTVVJFKCkpCgkJCQkgICAgVkFSIE1heE9mR3JvdXAgPSBNQVhYKEFMTFNFTEVDVEVEKCdDYWxlbmRhcicpLCBTRUxFQ1RFRE1FQVNVUkUoKSkKCQkJCQoJCQkJICAgIFJFVFVSTiBESVZJREUoRGV0YWlsVmFsdWUgLSBNaW5PZkdyb3VwLCBNYXhPZkdyb3VwIC0gTWluT2ZHcm91cCkKCQkJCSkKCQkJCWBgYAoKCQkJZm9ybWF0U3RyaW5nRGVmaW5pdGlvbiA9ICIwLjAiCgoJCWNhbGN1bGF0aW9uSXRlbSBSYW5kb21pemUgPSBJRkVSUk9SKFNFTEVDVEVETUVBU1VSRSgpICogUkFORCgpLCBTRUxFQ1RFRE1FQVNVUkUoKSkKCgkJY2FsY3VsYXRpb25JdGVtICdMYWJlbCAtIOKWsiBMWScgPSBgYGAKCQkJCXZhciB2VmFsdWUgPSBTRUxFQ1RFRE1FQVNVUkUoKQoJCQkJdmFyIHZWYWx1ZUxZID0gQ0FMQ1VMQVRFKFNFTEVDVEVETUVBU1VSRSgpLCBTQU1FUEVSSU9ETEFTVFlFQVIoJ0NhbGVuZGFyJ1tEYXRlXSkpCgkJCQl2YXIgdkdyb3d0aCA9IERJVklERSh2VmFsdWUgLSB2VmFsdWVMWSwgdlZhbHVlTFkpCgkJCQl2YXIgdkZvcm1hdCA9IFNFTEVDVEVETUVBU1VSRUZPUk1BVFNUUklORygpCgkJCQkKCQkJCXJldHVybgoJCQkJICAgIEZPUk1BVCh2VmFsdWUsIHZGb3JtYXQpCgkJCQkgICAgJiBJRiAoSVNCTEFOSyh2R3Jvd3RoKQoJCQkJICAgICAgICAsIEJMQU5LKCkKCQkJCSAgICAgICAgLCAiIHwgIiAgICAKCQkJCSAgICAgICAgJiBJRiAodkdyb3d0aCA+PSAwLCAi4payIiAsICLilrwiKSAmIEZPUk1BVCh2R3Jvd3RoLCAiMCUiKQoJCQkJICAgICkKCQkJCQoJCQkJYGBgCgoJCQlmb3JtYXRTdHJpbmdEZWZpbml0aW9uID0gU0VMRUNURURNRUFTVVJFRk9STUFUU1RSSU5HKCkKCgkJY2FsY3VsYXRpb25JdGVtICdEeW5hbWljIE1lYXN1cmUgLSBBcHBseSBGb3JtYXQnID0gU0VMRUNURURNRUFTVVJFKCkKCgkJCWZvcm1hdFN0cmluZ0RlZmluaXRpb24gPSBgYGAKCQkJCQkKCQkJCQlJRiAoCgkJCQkJICAgIC8vIE9ubHkgZG8gdGhpcyBmb3IgdGhlICdEeW5hbWljIE1lYXN1cmUnIE1lYXN1cmVzCgkJCQkJICAgIElTU0VMRUNURURNRUFTVVJFICggW1ZhbHVlXSwgW1ZhbHVlIChseSldLCBbVmFsdWUgKHl0ZCldLCBbVmFsdWUgQXZnIHBlciBNb250aF0gKSwKCQkJCQkgICAgICAgIFZBUiBtZWFzdXJlQ29kZSA9CgkJCQkJICAgICAgICAgICAgU0VMRUNURURWQUxVRSAoICdEeW5hbWljIE1lYXN1cmUnW0NvZGVdICkKCQkJCQkgICAgICAgIFZBUiBtZWFzdXJlRm9ybWF0ID0KCQkJCQkgICAgICAgICAgICBJRiAoCgkJCQkJICAgICAgICAgICAgICAgIG1lYXN1cmVDb2RlIDw+IEJMQU5LICgpLAoJCQkJCSAgICAgICAgICAgICAgICBMT09LVVBWQUxVRSAoICdEeW5hbWljIE1lYXN1cmUnW0Zvcm1hdF0sICdEeW5hbWljIE1lYXN1cmUnW0NvZGVdLCBtZWFzdXJlQ29kZSApCgkJCQkJICAgICAgICAgICAgKQoJCQkJCSAgICAgICAgUkVUVVJOCgkJCQkJICAgICAgICAgICAgSUYgKCBtZWFzdXJlRm9ybWF0IDw+IEJMQU5LICgpLCBtZWFzdXJlRm9ybWF0LCBTRUxFQ1RFRE1FQVNVUkVGT1JNQVRTVFJJTkcgKCkgKQoJCQkJCSAgICAKCQkJCQkgICAsIFNFTEVDVEVETUVBU1VSRUZPUk1BVFNUUklORyAoKQoJCQkJCSkKCQkJCQlgYGAKCgkJY2FsY3VsYXRpb25JdGVtICdMYWJlbCAtIOKWsiBMTScgPSBgYGAKCQkJCXZhciB2VmFsdWUgPSBTRUxFQ1RFRE1FQVNVUkUoKQoJCQkJdmFyIHZWYWx1ZUxNID0gQ0FMQ1VMQVRFKFNFTEVDVEVETUVBU1VSRSgpLCBQUkVWSU9VU01PTlRIKCdDYWxlbmRhcidbRGF0ZV0pKQoJCQkJdmFyIHZHcm93dGggPSBESVZJREUodlZhbHVlIC0gdlZhbHVlTE0sIHZWYWx1ZUxNKQoJCQkJdmFyIHZGb3JtYXQgPSBTRUxFQ1RFRE1FQVNVUkVGT1JNQVRTVFJJTkcoKQoJCQkJCgkJCQlyZXR1cm4KCQkJCSAgICBGT1JNQVQodlZhbHVlLCB2Rm9ybWF0KQoJCQkJICAgICYgSUYgKElTQkxBTksodkdyb3d0aCkKCQkJCSAgICAgICAgLCBCTEFOSygpCgkJCQkgICAgICAgICwgIiB8ICIgICAgCgkJCQkgICAgICAgICYgSUYgKHZHcm93dGggPj0gMCwgIuKWsiIgLCAi4pa8IikgJiBGT1JNQVQodkdyb3d0aCwgIjAlIikKCQkJCSAgICApCgkJCQkKCQkJCWBgYAoKCQkJZm9ybWF0U3RyaW5nRGVmaW5pdGlvbiA9IFNFTEVDVEVETUVBU1VSRUZPUk1BVFNUUklORygpCgoJY29sdW1uICdTbWFydCBDYWxjJwoJCWRhdGFUeXBlOiBzdHJpbmcKCQlsaW5lYWdlVGFnOiAwMDVlOGI5ZS0zNzhhLTQyMWEtOTA1Yy1mMjFkYWQ5NDZjZWIKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogTmFtZQoJCXNvcnRCeUNvbHVtbjogT3JkaW5hbAoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCWNvbHVtbiBPcmRpbmFsCgkJZGF0YVR5cGU6IGludDY0CgkJaXNIaWRkZW4KCQlsaW5lYWdlVGFnOiAyNTMyYjM1OC0wNmU3LTQ0OWQtYTk0NC04MTBmNTFmZmY3YTUKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogT3JkaW5hbAoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IFVzZXIKCg==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/relationships.tmdl",
              "payload": "cmVsYXRpb25zaGlwIGQ0ZTZkYzVhLTZmNDYtNDQzZC1hYjk0LTRjYzBlMTAzMjNjNgoJZnJvbUNvbHVtbjogU2FsZXMuQ3VzdG9tZXJLZXkKCXRvQ29sdW1uOiBDdXN0b21lci5DdXN0b21lcktleQoKcmVsYXRpb25zaGlwIDQzNGU3OWE5LWY1MjctNDgxZi1hY2NkLThiYzYwZWQxMzcwZQoJZnJvbUNvbHVtbjogU2FsZXMuJ09yZGVyIERhdGUnCgl0b0NvbHVtbjogQ2FsZW5kYXIuRGF0ZQoKcmVsYXRpb25zaGlwIDIxYmQxMDhlLTUyN2QtNDU2Ni1iZTdkLTllNDc0Yzg1OGVlMAoJaXNBY3RpdmU6IGZhbHNlCglmcm9tQ29sdW1uOiBTYWxlcy4nRGVsaXZlcnkgRGF0ZScKCXRvQ29sdW1uOiBDYWxlbmRhci5EYXRlCgpyZWxhdGlvbnNoaXAgYmI1YzU1OTEtYTBmZi00Y2U0LWE2MmUtNmM1ZjU2MDA2MzY4Cglmcm9tQ29sdW1uOiBTYWxlcy5Qcm9kdWN0S2V5Cgl0b0NvbHVtbjogUHJvZHVjdC5Qcm9kdWN0S2V5CgpyZWxhdGlvbnNoaXAgNTVhNmY1MTMtYzZmMi00ZDFjLWI4YWEtNDZlZGVhZWIyM2YyCglmcm9tQ29sdW1uOiBTYWxlcy5TdG9yZUtleQoJdG9Db2x1bW46IFN0b3JlLlN0b3JlS2V5Cgo=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/tables/About.tmdl",
              "payload": "Ly8vIFRhYmxlIHdpdGggaW5mb3JtYXRpb24gYWJvdXQgdGhlIG1vZGVsLgovLy8gS2V5L1ZhbHVlIHJlcHJlc2VudGF0aW9uLCB3aXRoIHByb3BlcnRpZXMgbGlrZTogbGFzdCByZWZyZXNoOyBtb2RlbCBjcmVhdG9yOy4uLgp0YWJsZSBBYm91dAoJbGluZWFnZVRhZzogNjg5MDc4MzAtZThhYy00YzEyLTk4ZDktZjcwNzExNDEzMDgwCgoJY29sdW1uIEtleQoJCWRhdGFUeXBlOiBzdHJpbmcKCQlsaW5lYWdlVGFnOiA2NGZkY2Y3NS0zM2UwLTQxMzQtYTViOC02NzdmOGZlZmE3ZWQKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogS2V5CgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIFZhbHVlCgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IDQxYWY2MDhmLWY0NmYtNDg3OC1iZTAzLTE4NGQwY2FkNDRjZgoJCXN1bW1hcml6ZUJ5OiBub25lCgkJc291cmNlQ29sdW1uOiBWYWx1ZQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCWNvbHVtbiBPcmRlcgoJCWRhdGFUeXBlOiBpbnQ2NAoJCWZvcm1hdFN0cmluZzogMAoJCWxpbmVhZ2VUYWc6IDkzYmFlOGQ4LTk3OTQtNDgwZS04NzUzLWQ1MTY5M2RmYTlhZAoJCXN1bW1hcml6ZUJ5OiBzdW0KCQlzb3VyY2VDb2x1bW46IE9yZGVyCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJcGFydGl0aW9uIEFib3V0LTc3YzIxMjQwLTc3NTEtNDU3NS1iZjQwLThjMDY4YmZkMDFjZCA9IG0KCQltb2RlOiBpbXBvcnQKCQlzb3VyY2UgPQoJCQkJbGV0CgkJCQkKCQkJCcKgwqDCoMKgU291cmNlID0gVGFibGUuRnJvbVJvd3MoSnNvbi5Eb2N1bWVudChCaW5hcnkuRGVjb21wcmVzcyhCaW5hcnkuRnJvbVRleHQoIk5WQTdibU14REx6SzROWEdRM0lIcDlzdGs4Wnd3VWkwUTBBU0ZZazBrdHN2bFpmdHhDRTF2OHRsTy9PRGkzYk9lUC9lVHR0ZlNVT24zbXk3bmk3Ykc0OHAyZ0ovM3A5K2tEUFBOS1RiZ2Y3UndSWFNwMWRrTFRvd3hVQ1Y3WVNrYlhJeU5oK2dMRjFta25ZSEY0bmxETDJzWVBGWk5jTzQ5dmdzTFVtVzdNM2doa0x2UVErMmc1cFI2ZDRJVk9UVGFjZXJnWnZVNEVhVjlYakVTUFdFVDVlSnB0T0daL0FYanlSR3l6QzhGS3BKRCtaMUpGT1cwZytsOURnR1V4aXY0VW1QQUNGbE84NkxrdHdZTWp5Y0hGbWxZWEFmL01FdDg0amdBVHkwZUE4NURqdVJGRHduSTBrcC94dUtRSTZiMzRVTWJSbENweEdEangwdlg0bTdzYThhb3dOTmlUakZYZkl1bVd6OWlCUjlxR1J1cThYVlZJZ21MNTFXYnVqdEpra0ltU2VQdGExYWxnMWFCVW5VTVg5NzlicHYxK3MvIiwgQmluYXJ5RW5jb2RpbmcuQmFzZTY0KSwgQ29tcHJlc3Npb24uRGVmbGF0ZSkpLCBsZXQgX3QgPSAoKHR5cGUgbnVsbGFibGUgdGV4dCkgbWV0YSBbU2VyaWFsaXplZC5UZXh0ID0gdHJ1ZV0pIGluIHR5cGUgdGFibGUgW0tleSA9IF90LCBWYWx1ZSA9IF90XSksCgkJCQkKCQkJCcKgwqDCoMKgRHluYW1pY1RhYmxlID0gVGFibGUuRnJvbVJvd3Moe3siTGFzdCBSZWZyZXNoIiwgRGF0ZVRpbWUuVG9UZXh0KERhdGVUaW1lLkxvY2FsTm93KCksICJ5eXl5LU1NLWRkIEhIOm1tOnNzIil9fSwgeyJLZXkiLCAiVmFsdWUifSksCgkJCQkKCQkJCcKgwqDCoMKgRmluYWxUYWJsZSA9IFRhYmxlLkNvbWJpbmUoe1NvdXJjZSwgRHluYW1pY1RhYmxlfSksCgkJCQkKCQkJCcKgwqDCoMKgIyJBZGRlZCBJbmRleCIgPSBUYWJsZS5BZGRJbmRleENvbHVtbihGaW5hbFRhYmxlLCAiT3JkZXIiLCAxLCAxKSwKCQkJCQoJCQkJwqDCoMKgwqAjIkNoYW5nZWQgVHlwZSIgPSBUYWJsZS5UcmFuc2Zvcm1Db2x1bW5UeXBlcygjIkFkZGVkIEluZGV4Iix7eyJLZXkiLCB0eXBlIHRleHR9LCDCoHsiVmFsdWUiLCB0eXBlIHRleHR9LHsiT3JkZXIiLCBJbnQ2NC5UeXBlfX0pLAoJCQkJCgkJCQnCoMKgwqDCoCMiUmVvcmRlcmVkIENvbHVtbnMiID0gVGFibGUuUmVvcmRlckNvbHVtbnMoIyJDaGFuZ2VkIFR5cGUiLHsiS2V5IiwgIlZhbHVlIiwgIk9yZGVyIn0pCgkJCQkKCQkJCWluCgkJCQkKCQkJCcKgwqDCoMKgIyJSZW9yZGVyZWQgQ29sdW1ucyIKCglhbm5vdGF0aW9uIFBCSV9SZXN1bHRUeXBlID0gVGFibGUKCg==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/tables/Store.tmdl",
              "payload": "Ly8vIFN0b3JlIG1ldGFkYXRhCnRhYmxlIFN0b3JlCglsaW5lYWdlVGFnOiA1NGQ1Zjg4NC0xMmRiLTRlMDMtYTEyMC0wOGNkNzI1ZGIyYzQKCgltZWFzdXJlICcjIFN0b3JlcycgPSBDT1VOVFJPV1MoJ1N0b3JlJykKCQlmb3JtYXRTdHJpbmc6ICMsIyMwCgkJbGluZWFnZVRhZzogODY4ZGY5YzgtZjU3OS00N2QxLWE3NzYtM2QyOTEyMWRmN2M3CgoJCWNoYW5nZWRQcm9wZXJ0eSA9IEZvcm1hdFN0cmluZwoKCWNvbHVtbiBTdG9yZUtleQoJCWRhdGFUeXBlOiBpbnQ2NAoJCWlzS2V5CgkJZm9ybWF0U3RyaW5nOiAwCgkJaXNBdmFpbGFibGVJbk1keDogZmFsc2UKCQlsaW5lYWdlVGFnOiBiNjNiYzdiOC0yNjZhLTQ0MjQtOTY3Ni1jM2U2ODUwMWIyZWMKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogU3RvcmVLZXkKCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBBdXRvbWF0aWMKCgljb2x1bW4gJ1N0b3JlIENvZGUnCgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IDMwN2UzMzQ4LTIxMzItNGRiMy1iNzZhLTc3MWFjNDU2MWVmNQoJCXN1bW1hcml6ZUJ5OiBub25lCgkJc291cmNlQ29sdW1uOiBTdG9yZSBDb2RlCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIENvdW50cnkKCQlkYXRhVHlwZTogc3RyaW5nCgkJbGluZWFnZVRhZzogNzU2NGZlMjktYWQwMS00M2UwLWJhOTMtMmUxNjM0ZTFhOWIzCgkJZGF0YUNhdGVnb3J5OiBDb3VudHJ5CgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IENvdW50cnkKCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBBdXRvbWF0aWMKCgljb2x1bW4gU3RhdGUKCQlkYXRhVHlwZTogc3RyaW5nCgkJbGluZWFnZVRhZzogZjQ3MWM5YzAtMTkyNC00NmU0LTk5ZDgtNTljY2YwZjY0Y2JhCgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IFN0YXRlCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uIFN0b3JlCgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IDdiZWU5MTVmLTdlYjctNGRiYy1hMTZmLWU3OTZmNDEwYjNmNQoJCWlzRGVmYXVsdExhYmVsCgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IFN0b3JlCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uICdTcXVhcmUgTWV0ZXJzJwoJCWRhdGFUeXBlOiBpbnQ2NAoJCWZvcm1hdFN0cmluZzogMAoJCWxpbmVhZ2VUYWc6IDE1OTY1ODhhLWFjYzQtNDFjNC1hNjkyLTMxMGZkMjg5OTRiYgoJCXN1bW1hcml6ZUJ5OiBub25lCgkJc291cmNlQ29sdW1uOiBTcXVhcmUgTWV0ZXJzCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJY29sdW1uICdPcGVuIERhdGUnCgkJZGF0YVR5cGU6IGRhdGVUaW1lCgkJZm9ybWF0U3RyaW5nOiBMb25nIERhdGUKCQlsaW5lYWdlVGFnOiA2NmNmNTE2OC00YWRkLTRhMDUtYjJjOC0wMzgwYTg1YjA1MzkKCQlzdW1tYXJpemVCeTogbm9uZQoJCXNvdXJjZUNvbHVtbjogT3BlbiBEYXRlCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gQXV0b21hdGljCgoJCWFubm90YXRpb24gVW5kZXJseWluZ0RhdGVUaW1lRGF0YVR5cGUgPSBEYXRlCgoJY29sdW1uICdDbG9zZSBEYXRlJwoJCWRhdGFUeXBlOiBkYXRlVGltZQoJCWZvcm1hdFN0cmluZzogTG9uZyBEYXRlCgkJbGluZWFnZVRhZzogZTYyN2VhMTctM2I2Mi00NmYyLWEyZjQtNTQ5ZGM5OGJlYjA2CgkJc3VtbWFyaXplQnk6IG5vbmUKCQlzb3VyY2VDb2x1bW46IENsb3NlIERhdGUKCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBBdXRvbWF0aWMKCgkJYW5ub3RhdGlvbiBVbmRlcmx5aW5nRGF0ZVRpbWVEYXRhVHlwZSA9IERhdGUKCgljb2x1bW4gU3RhdHVzCgkJZGF0YVR5cGU6IHN0cmluZwoJCWxpbmVhZ2VUYWc6IDkzMTIyOTkxLTNkNmEtNDEzYy1hZDI2LTM2MTBmYTkwMDEzYgoJCXN1bW1hcml6ZUJ5OiBub25lCgkJc291cmNlQ29sdW1uOiBTdGF0dXMKCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBBdXRvbWF0aWMKCglwYXJ0aXRpb24gU3RvcmUtYzBlNWJhOTgtZjk1YS00NzEyLTkxZWMtNzFjN2RjMzVlMTc3ID0gbQoJCW1vZGU6IGltcG9ydAoJCXNvdXJjZSA9CgkJCQlsZXQKCQkJCSAgICBTb3VyY2UgPSAjIlJBVy1TdG9yZSIsCgkJCQkgICAgIyJSZW5hbWVkIENvbHVtbnMiID0gVGFibGUuUmVuYW1lQ29sdW1ucyhTb3VyY2Use3siTmFtZSIsICJTdG9yZSJ9fSksCgkJCQkgICAgIyJDaGFuZ2VkIFR5cGUiID0gVGFibGUuVHJhbnNmb3JtQ29sdW1uVHlwZXMoIyJSZW5hbWVkIENvbHVtbnMiLHt7IlN0b3JlS2V5IiwgSW50NjQuVHlwZX0sIHsiU3RvcmUgQ29kZSIsIHR5cGUgdGV4dH0sIHsiQ291bnRyeSIsIHR5cGUgdGV4dH0sIHsiU3RhdGUiLCB0eXBlIHRleHR9LCB7IlN0b3JlIiwgdHlwZSB0ZXh0fSwgeyJTcXVhcmUgTWV0ZXJzIiwgSW50NjQuVHlwZX0sIHsiT3BlbiBEYXRlIiwgdHlwZSBkYXRlfSwgeyJDbG9zZSBEYXRlIiwgdHlwZSBkYXRlfSwgeyJTdGF0dXMiLCB0eXBlIHRleHR9fSkKCQkJCWluCgkJCQkgICAgIyJDaGFuZ2VkIFR5cGUiCgoJYW5ub3RhdGlvbiBQQklfUmVzdWx0VHlwZSA9IFRhYmxlCgo=",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/tables/Dynamic Measure.tmdl",
              "payload": "Ly8vIER5bmFtaWMgTWVhc3VyZSB0YWJsZQovLy8gVXNlZnVsIHRvIGV4cGxvcmUgbWVhc3VyZSAiYXMgYSBkaW1lbnNpb24iCnRhYmxlICdEeW5hbWljIE1lYXN1cmUnCglsaW5lYWdlVGFnOiAyMDhmNzg1ZC0wM2MxLTQxY2EtYjMzYS1jNTZjMzY5MTZjYWEKCgltZWFzdXJlIFZhbHVlID0gYGBgCgkJCQoJCQlJRiAoCgkJCSAgICBIQVNPTkVWQUxVRSAoICdEeW5hbWljIE1lYXN1cmUnW0NvZGVdICksCgkJCSAgICB2YXIgbWVhc3VyZUNvZGUgPSBTRUxFQ1RFRFZBTFVFKCdEeW5hbWljIE1lYXN1cmUnW0NvZGVdKQoJCQkgICAgcmV0dXJuIFNXSVRDSCAoCgkJCSAgICAgICBtZWFzdXJlQ29kZQoJCQkgICAgICAgICwxLCBbU2FsZXMgQW1vdW50XQoJCQkgICAgICAgICwyLCBbU2FsZXMgQW1vdW50ICAoJSDOlCBMWSldCgkJCSAgICAgICAgLDMsIFsjIEN1c3RvbWVycyAod2l0aCBTYWxlcyldICAgCgkJCSAgICAgICAgLDQsIFtTYWxlcyBRdHldCgkJCSAgICAgICAgLDUsIFtNYXJnaW5dCgkJCSAgICAgICAgLEJMQU5LICgpCgkJCSAgICApCgkJCSkKCQkJYGBgCgkJbGluZWFnZVRhZzogMWY3NDhkZDYtNzU4ZS00NDQ1LWJmNmMtZGFiMTdkNjFkMmVlCgoJCWFubm90YXRpb24gQmVzdFByYWN0aWNlQW5hbHl6ZXJfSWdub3JlUnVsZXMgPSB7IlJ1bGVJRHMiOlsiUFJPVklERV9GT1JNQVRfU1RSSU5HX0ZPUl9NRUFTVVJFUyIsIklOVEVHRVJfRk9STUFUVElORyJdfQoKCQlhbm5vdGF0aW9uIFBCSV9Gb3JtYXRIaW50ID0geyJpc0dlbmVyYWxOdW1iZXIiOnRydWV9CgoJbWVhc3VyZSAnVmFsdWUgKGx5KScgPSBDQUxDVUxBVEUgKCBbVmFsdWVdLCBTQU1FUEVSSU9ETEFTVFlFQVIoJ0NhbGVuZGFyJ1tEYXRlXSkgKQoJCWxpbmVhZ2VUYWc6IDU5NzgxNjEyLTY4OTAtNDY2NS1hMWIyLWFhMjUzMjRmZTg5NgoKCQlhbm5vdGF0aW9uIEJlc3RQcmFjdGljZUFuYWx5emVyX0lnbm9yZVJ1bGVzID0geyJSdWxlSURzIjpbIlBST1ZJREVfRk9STUFUX1NUUklOR19GT1JfTUVBU1VSRVMiLCJJTlRFR0VSX0ZPUk1BVFRJTkciXX0KCgkJYW5ub3RhdGlvbiBQQklfRm9ybWF0SGludCA9IHsiaXNHZW5lcmFsTnVtYmVyIjp0cnVlfQoKCW1lYXN1cmUgJ1ZhbHVlICh5dGQpJyA9IENBTENVTEFURShbVmFsdWVdLCBEQVRFU1lURCgnQ2FsZW5kYXInW0RhdGVdKSkKCQlsaW5lYWdlVGFnOiBiMDE5MDljOS03MThjLTQ4ZDItOThhZi00ODJiMzliZjIyNzIKCgkJYW5ub3RhdGlvbiBCZXN0UHJhY3RpY2VBbmFseXplcl9JZ25vcmVSdWxlcyA9IHsiUnVsZUlEcyI6WyJQUk9WSURFX0ZPUk1BVF9TVFJJTkdfRk9SX01FQVNVUkVTIiwiSU5URUdFUl9GT1JNQVRUSU5HIl19CgoJbWVhc3VyZSAnVmFsdWUgQXZnIHBlciBNb250aCcgPSBgYGAKCQkJCgkJCSBBVkVSQUdFWChWQUxVRVMoJ0NhbGVuZGFyJ1tNb250aCAoWWVhcildKSwgW1ZhbHVlXSkKCQkJYGBgCgkJbGluZWFnZVRhZzogYmE4N2I4MTktMjE0Ny00NDNiLWFhZWItOGFlMTcyOWM2NTUwCgoJCWFubm90YXRpb24gQmVzdFByYWN0aWNlQW5hbHl6ZXJfSWdub3JlUnVsZXMgPSB7IlJ1bGVJRHMiOlsiUFJPVklERV9GT1JNQVRfU1RSSU5HX0ZPUl9NRUFTVVJFUyIsIklOVEVHRVJfRk9STUFUVElORyJdfQoKCQlhbm5vdGF0aW9uIFBCSV9Gb3JtYXRIaW50ID0geyJpc0dlbmVyYWxOdW1iZXIiOnRydWV9CgoJbWVhc3VyZSAnVmFsdWUgRGFpbHkgTWF4JyA9IE1BWFgoVkFMVUVTKCdDYWxlbmRhcidbRGF0ZV0pLCBbVmFsdWVdKQoJCWxpbmVhZ2VUYWc6IGQ4ZmJhZTVmLWEwYzAtNGIyZS04NWU5LTFlMDQ1ZDc1MTBlMAoKCQlhbm5vdGF0aW9uIEJlc3RQcmFjdGljZUFuYWx5emVyX0lnbm9yZVJ1bGVzID0geyJSdWxlSURzIjpbIlBST1ZJREVfRk9STUFUX1NUUklOR19GT1JfTUVBU1VSRVMiLCJJTlRFR0VSX0ZPUk1BVFRJTkciXX0KCgkJYW5ub3RhdGlvbiBQQklfRm9ybWF0SGludCA9IHsiaXNHZW5lcmFsTnVtYmVyIjp0cnVlfQoKCW1lYXN1cmUgJ1ZhbHVlICUgKM6UIGx5KScgPQoJCQkKCQkJdmFyIGx5ID1bVmFsdWUgKGx5KV0KCQkJcmV0dXJuCgkJCURJVklERSgKCQkJICAgICAgICBbVmFsdWVdLSBseSwKCQkJICAgICAgICBseQoJCQkgICAgKQoJCWZvcm1hdFN0cmluZzogMC4wMCU7LTAuMDAlOzAuMDAlCgkJbGluZWFnZVRhZzogODk3ZmU4MjQtZWI5NC00ZWM5LTk5NmUtMjYyMzhmNGMyYjIzCgoJCWNoYW5nZWRQcm9wZXJ0eSA9IEZvcm1hdFN0cmluZwoKCW1lYXN1cmUgJ1ZhbHVlIE5vcm1hbGl6ZWQgKGJ5IGRhdGUpJyA9IGBgYAoJCQkKCQkJVkFSIERldGFpbFZhbHVlID0gW1ZhbHVlXQoJCQlyZXR1cm4gaWYgKERldGFpbFZhbHVlLCAKCQkJCgkJCSAgICAvL1ZBUiBNaW5PZkdyb3VwID0gTUlOWChBTExTRUxFQ1RFRCgnQ2FsZW5kYXInW01vbnRoIChZZWFyKV0sICdDYWxlbmRhcidbTW9udGhZZWFySWRdKSwgW1ZhbHVlXSkKCQkJICAgIC8vVkFSIE1heE9mR3JvdXAgPSBNQVhYKEFMTFNFTEVDVEVEKCdDYWxlbmRhcidbTW9udGggKFllYXIpXSwgJ0NhbGVuZGFyJ1tNb250aFllYXJJZF0pLCBbVmFsdWVdKQoJCQkgICAgVkFSIE1pbk9mR3JvdXAgPSBNSU5YKEFMTFNFTEVDVEVEKCdDYWxlbmRhcicpLCBbVmFsdWVdKQoJCQkgICAgVkFSIE1heE9mR3JvdXAgPSBNQVhYKEFMTFNFTEVDVEVEKCdDYWxlbmRhcicpLCBbVmFsdWVdKQoJCQkgICAgUkVUVVJOIERJVklERShEZXRhaWxWYWx1ZSAtIE1pbk9mR3JvdXAsIE1heE9mR3JvdXAgLSBNaW5PZkdyb3VwKQoJCQkpCgkJCWBgYAoJCWxpbmVhZ2VUYWc6IDE1NTQ5NDA2LWZiMjktNDZlOC05MDk0LTI1YWRkMmM3NDk5NQoKCQlhbm5vdGF0aW9uIEJlc3RQcmFjdGljZUFuYWx5emVyX0lnbm9yZVJ1bGVzID0geyJSdWxlSURzIjpbIlBST1ZJREVfRk9STUFUX1NUUklOR19GT1JfTUVBU1VSRVMiLCJJTlRFR0VSX0ZPUk1BVFRJTkciXX0KCgkJYW5ub3RhdGlvbiBQQklfRm9ybWF0SGludCA9IHsiaXNHZW5lcmFsTnVtYmVyIjp0cnVlfQoKCWNvbHVtbiBDb2RlCgkJZm9ybWF0U3RyaW5nOiAwCgkJbGluZWFnZVRhZzogYTVkYjhkM2ItNzBhZi00ODNkLWJjYWItNWMwZmNjNzQ3OGMyCgkJc3VtbWFyaXplQnk6IG5vbmUKCQlpc05hbWVJbmZlcnJlZAoJCXNvdXJjZUNvbHVtbjogW0NvZGVdCgoJCWFubm90YXRpb24gU3VtbWFyaXphdGlvblNldEJ5ID0gVXNlcgoKCWNvbHVtbiBPcmRlcgoJCWZvcm1hdFN0cmluZzogMAoJCWxpbmVhZ2VUYWc6IGM3ODI0YjljLTAyMWMtNGJmZi1iMzYzLWMwNGIzY2IyYzY4MQoJCXN1bW1hcml6ZUJ5OiBub25lCgkJaXNOYW1lSW5mZXJyZWQKCQlzb3VyY2VDb2x1bW46IFtPcmRlcl0KCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBVc2VyCgoJY29sdW1uIE1lYXN1cmUKCQlsaW5lYWdlVGFnOiBkOGUzYWU3OC1mZGEyLTQ5ZTYtYjhjYi1iNjI1N2U5MjcyNjEKCQlzdW1tYXJpemVCeTogbm9uZQoJCWlzTmFtZUluZmVycmVkCgkJc291cmNlQ29sdW1uOiBbTWVhc3VyZV0KCgkJYW5ub3RhdGlvbiBTdW1tYXJpemF0aW9uU2V0QnkgPSBBdXRvbWF0aWMKCgljb2x1bW4gQXJlYQoJCWxpbmVhZ2VUYWc6IDM2NGFlMzlkLTczYmQtNDUyNy05MWU0LTBlNjQ5YTIzZDhhNwoJCXN1bW1hcml6ZUJ5OiBub25lCgkJaXNOYW1lSW5mZXJyZWQKCQlzb3VyY2VDb2x1bW46IFtBcmVhXQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCWNvbHVtbiBGb3JtYXQKCQlsaW5lYWdlVGFnOiBlYzE3Njk1Yy1kYzU5LTQ2NzQtYmRhYS1iYmRlYjQxMzE1OTMKCQlzdW1tYXJpemVCeTogbm9uZQoJCWlzTmFtZUluZmVycmVkCgkJc291cmNlQ29sdW1uOiBbRm9ybWF0XQoKCQlhbm5vdGF0aW9uIFN1bW1hcml6YXRpb25TZXRCeSA9IEF1dG9tYXRpYwoKCXBhcnRpdGlvbiAnRHluYW1pYyBNZWFzdXJlLWU0MDM1MWVkLWE1MjMtNGZmNC05MTg1LTc4MzRiM2ZiYjhlOCcgPSBjYWxjdWxhdGVkCgkJbW9kZTogaW1wb3J0CgkJc291cmNlID0gYGBgCgkJCQkKCQkJCURBVEFUQUJMRSAoCgkJCQkgICAgIkNvZGUiLCBJTlRFR0VSLAoJCQkJICAgICJPcmRlciIsIElOVEVHRVIsCgkJCQkgICAgIk1lYXN1cmUiLCBTVFJJTkcsCgkJCQkgICAgIkFyZWEiLCBTVFJJTkcsCgkJCQkgICAgIkZvcm1hdCIsIFNUUklORywKCQkJCSAgICB7IAoJCQkJICAgICAgICB7IDEsIDEsICJTYWxlcyBBbW91bnQiLCAiU2FsZXMiLCAiXCQjLDAuMDA7KFwkIywwLjAwKTtcJCMsMC4wMCIgfSwKCQkJCSAgICAgICAgeyAyLCAyLCAiU2FsZXMgR3Jvd3RoIHZzIExZIiwgIlNhbGVzIiwgIjAuMDAwJSJ9LAoJCQkJICAgICAgICB7IDMsIDQsICIjIEN1c3RvbWVycyIsICJNYXJrZXRpbmciLCAiIywjIiB9LCAgICAgICAgICAgICAgCgkJCQkgICAgICAgIHsgNCwgMiwgIlNhbGVzIFF0eSIsICJTYWxlcyIsICIjLCMiIH0sCgkJCQkgICAgICAgIHsgNSwgMiwgIlNhbGVzIE1hcmdpbiIsICJTYWxlcyIsICJcJCMsMC4wMDsoXCQjLDAuMDApO1wkIywwLjAwIiB9CgkJCQkgICAgfSAKCQkJCSkKCQkJCQoJCQkJYGBgCgoJYW5ub3RhdGlvbiBQQklfSWQgPSA0ZDJmMzA4ZDFhZjE0ZWEzYWNjZjNjNDU4NjIxYTlkNwoKCWFubm90YXRpb24gQmVzdFByYWN0aWNlQW5hbHl6ZXJfSWdub3JlUnVsZXMgPSB7IlJ1bGVJRHMiOlsiUkVEVUNFX1VTQUdFX09GX0NBTENVTEFURURfVEFCTEVTIiwiRU5TVVJFX1RBQkxFU19IQVZFX1JFTEFUSU9OU0hJUFMiXX0KCg==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/roles/Stores Cluster 2.tmdl",
              "payload": "cm9sZSAnU3RvcmVzIENsdXN0ZXIgMicKCW1vZGVsUGVybWlzc2lvbjogcmVhZAoKCXRhYmxlUGVybWlzc2lvbiBTdG9yZSA9IFtTdG9yZSBDb2RlXSBJTiB7IjEwIiwiMTEiLCIxNSIsIjgifQoKCWFubm90YXRpb24gUEJJX0lkID0gMTYwZDdhMzI3ZGZkNGNhMjk5Njg0MWJmZGRlMzU2N2QKCg==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/roles/Stores Cluster 1.tmdl",
              "payload": "cm9sZSAnU3RvcmVzIENsdXN0ZXIgMScKCW1vZGVsUGVybWlzc2lvbjogcmVhZAoKCXRhYmxlUGVybWlzc2lvbiBTdG9yZSA9IFtTdG9yZSBDb2RlXSBJTiB7IjEiLCIyIiwiNCJ9CgoJYW5ub3RhdGlvbiBQQklfSWQgPSAzYzQwY2NmMDk4ZWI0MjUzYWQzMWY4YzY3OWUxNDBkMwoK",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/perspectives/Sales.tmdl",
              "payload": "cGVyc3BlY3RpdmUgU2FsZXMKCglwZXJzcGVjdGl2ZVRhYmxlIFNhbGVzCgoJCXBlcnNwZWN0aXZlTWVhc3VyZSAnIyBDdXN0b21lcnMgKHdpdGggU2FsZXMpJwoKCQlwZXJzcGVjdGl2ZU1lYXN1cmUgJyMgUHJvZHVjdHMgKHdpdGggU2FsZXMpJwoKCQlwZXJzcGVjdGl2ZU1lYXN1cmUgJ1NhbGVzIFF0eScKCgkJcGVyc3BlY3RpdmVNZWFzdXJlICdTYWxlcyBBbW91bnQnCgoJCXBlcnNwZWN0aXZlTWVhc3VyZSAnU2FsZXMgQW1vdW50ICAozpQgTFkpJwoKCQlwZXJzcGVjdGl2ZU1lYXN1cmUgJ1NhbGVzIEFtb3VudCAoTFkpJwoKCQlwZXJzcGVjdGl2ZU1lYXN1cmUgJ1NhbGVzIEFtb3VudCAoWVRELCBMWSknCgoJCXBlcnNwZWN0aXZlTWVhc3VyZSAnU2FsZXMgQW1vdW50IChZVEQpJwoKCQlwZXJzcGVjdGl2ZU1lYXN1cmUgJ1NhbGVzIEFtb3VudCBBdmcgcGVyIERheScKCgkJcGVyc3BlY3RpdmVNZWFzdXJlICdTYWxlcyBBbW91bnQgICglIM6UIExZKScKCgkJcGVyc3BlY3RpdmVNZWFzdXJlIE1hcmdpbgoKCQlwZXJzcGVjdGl2ZU1lYXN1cmUgJ01hcmdpbiAobHkpJwoKCQlwZXJzcGVjdGl2ZU1lYXN1cmUgJyMgU2FsZXMnCgoJCXBlcnNwZWN0aXZlTWVhc3VyZSAnU2FsZXMgUXR5IGJ5IERlbGl2ZXJ5IERhdGUnCgoJCXBlcnNwZWN0aXZlTWVhc3VyZSAnU2FsZXMgQW1vdW50ICgxMk0gYXZlcmFnZSknCgoJCXBlcnNwZWN0aXZlTWVhc3VyZSAnU2FsZXMgQW1vdW50ICg2TSBhdmVyYWdlKScKCgkJcGVyc3BlY3RpdmVDb2x1bW4gUXVhbnRpdHkKCgkJcGVyc3BlY3RpdmVDb2x1bW4gJ09yZGVyIE51bWJlcicKCgkJcGVyc3BlY3RpdmVDb2x1bW4gJ0xpbmUgTnVtYmVyJwoKCQlwZXJzcGVjdGl2ZUNvbHVtbiAnT3JkZXIgRGF0ZScKCgkJcGVyc3BlY3RpdmVDb2x1bW4gJ0RlbGl2ZXJ5IERhdGUnCgoJCXBlcnNwZWN0aXZlQ29sdW1uIEN1c3RvbWVyS2V5CgoJCXBlcnNwZWN0aXZlQ29sdW1uIFN0b3JlS2V5CgoJCXBlcnNwZWN0aXZlQ29sdW1uIFByb2R1Y3RLZXkKCgkJcGVyc3BlY3RpdmVDb2x1bW4gJ05ldCBQcmljZScKCgkJcGVyc3BlY3RpdmVDb2x1bW4gJ1VuaXQgQ29zdCcKCgkJcGVyc3BlY3RpdmVDb2x1bW4gJ0N1cnJlbmN5IENvZGUnCgoJCXBlcnNwZWN0aXZlQ29sdW1uICdFeGNoYW5nZSBSYXRlJwoKCQlwZXJzcGVjdGl2ZUNvbHVtbiBFbnZpcm9ubWVudAoKCXBlcnNwZWN0aXZlVGFibGUgUHJvZHVjdAoKCQlwZXJzcGVjdGl2ZU1lYXN1cmUgJyMgUHJvZHVjdHMnCgoJCXBlcnNwZWN0aXZlQ29sdW1uIFByb2R1Y3QKCgkJcGVyc3BlY3RpdmVDb2x1bW4gUHJvZHVjdEtleQoKCQlwZXJzcGVjdGl2ZUNvbHVtbiAnUHJvZHVjdCBDb2RlJwoKCQlwZXJzcGVjdGl2ZUNvbHVtbiBNYW51ZmFjdHVyZXIKCgkJcGVyc3BlY3RpdmVDb2x1bW4gQnJhbmQKCgkJcGVyc3BlY3RpdmVDb2x1bW4gQ29sb3IKCgkJcGVyc3BlY3RpdmVDb2x1bW4gJ1dlaWdodCBVbml0IE1lYXN1cmUnCgoJCXBlcnNwZWN0aXZlQ29sdW1uIFdlaWdodAoKCQlwZXJzcGVjdGl2ZUNvbHVtbiAnVW5pdCBDb3N0JwoKCQlwZXJzcGVjdGl2ZUNvbHVtbiAnVW5pdCBQcmljZScKCgkJcGVyc3BlY3RpdmVDb2x1bW4gJ1N1YmNhdGVnb3J5IENvZGUnCgoJCXBlcnNwZWN0aXZlQ29sdW1uIFN1YmNhdGVnb3J5CgoJCXBlcnNwZWN0aXZlQ29sdW1uICdDYXRlZ29yeSBDb2RlJwoKCQlwZXJzcGVjdGl2ZUNvbHVtbiBDYXRlZ29yeQoK",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/cultures/en-US.tmdl",
              "payload": "",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/model.tmdl",
              "payload": "bW9kZWwgTW9kZWwKCWN1bHR1cmU6IGVuLVVTCglkZWZhdWx0UG93ZXJCSURhdGFTb3VyY2VWZXJzaW9uOiBwb3dlckJJX1YzCglkaXNjb3VyYWdlSW1wbGljaXRNZWFzdXJlcwoJc291cmNlUXVlcnlDdWx0dXJlOiBlbi1VUwoJZGF0YUFjY2Vzc09wdGlvbnMKCQlsZWdhY3lSZWRpcmVjdHMKCQlyZXR1cm5FcnJvclZhbHVlc0FzTnVsbAoKcXVlcnlHcm91cCAnUmF3IERhdGEnCgoJYW5ub3RhdGlvbiBQQklfUXVlcnlHcm91cE9yZGVyID0gMAoKYW5ub3RhdGlvbiBQQklEZXNrdG9wVmVyc2lvbiA9IDIuMTQxLjAuMCAoTWFpbikrYTEyNmVkZWEyMDRhNDJmNWQ2MzFkMGQ0ZmE5ZTg5YmQ3Yjc3NzFkMgoKYW5ub3RhdGlvbiBfX1BCSV9UaW1lSW50ZWxsaWdlbmNlRW5hYmxlZCA9IDAKCmFubm90YXRpb24gUEJJX1F1ZXJ5T3JkZXIgPSBbIlJhbmdlU3RhcnQiLCJSYW5nZUVuZCIsIkVudmlyb25tZW50IiwiQ2FsZW5kYXIiLCJTYWxlcyIsIlByb2R1Y3QiLCJDdXN0b21lciIsIlN0b3JlIiwiUkFXLVByb2R1Y3QiLCJSQVctU3RvcmUiLCJSQVctQ3VzdG9tZXIiLCJSQVctU2FsZXMiLCJSQVctU2FsZXNEYXRlQWRqdXN0ZWQiLCJSQVctQ3VycmVuY3lFeGNoYW5nZSIsIkFib3V0Il0KCmFubm90YXRpb24gQmVzdFByYWN0aWNlQW5hbHl6ZXJfSWdub3JlUnVsZXMgPSB7IlJ1bGVJRHMiOlsiUEFSVElUSU9OX05BTUVfU0hPVUxEX01BVENIX1RBQkxFX05BTUVfRk9SX1NJTkdMRV9QQVJUSVRJT05fVEFCTEVTIl19Cgphbm5vdGF0aW9uIF9fVEVkdHIgPSAxCgphbm5vdGF0aW9uIFBCSV9Qcm9Ub29saW5nID0gWyJEZXZNb2RlIl0KCnJlZiB0YWJsZSBDYWxlbmRhcgpyZWYgdGFibGUgU2FsZXMKcmVmIHRhYmxlIFByb2R1Y3QKcmVmIHRhYmxlIEN1c3RvbWVyCnJlZiB0YWJsZSAnU21hcnQgQ2FsY3MnCnJlZiB0YWJsZSAnRHluYW1pYyBNZWFzdXJlJwpyZWYgdGFibGUgU3RvcmUKcmVmIHRhYmxlIEFib3V0CgpyZWYgcm9sZSAnU3RvcmVzIENsdXN0ZXIgMScKcmVmIHJvbGUgJ1N0b3JlcyBDbHVzdGVyIDInCgpyZWYgcGVyc3BlY3RpdmUgU2FsZXMKCnJlZiBjdWx0dXJlSW5mbyBlbi1VUwoK",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/expressions.tmdl",
              "payload": "",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition/database.tmdl",
              "payload": "ZGF0YWJhc2UKCWNvbXBhdGliaWxpdHlMZXZlbDogMTU2NwoK",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/.pbi/editorSettings.json",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3NlbWFudGljTW9kZWwvZWRpdG9yU2V0dGluZ3MvMS4wLjAvc2NoZW1hLmpzb24iLAogICJzaG93SGlkZGVuRmllbGRzIjogdHJ1ZSwKICAicGFyYWxsZWxRdWVyeUxvYWRpbmciOiB0cnVlLAogICJyZWxhdGlvbnNoaXBJbXBvcnRFbmFibGVkIjogdHJ1ZSwKICAic2hvdWxkTm90aWZ5VXNlck9mTmFtZUNvbmZsaWN0UmVzb2x1dGlvbiI6IHRydWUKfQ==",
              "payloadType": "InlineBase64"
            },
            {
              "path": "/SalesV2 1.SemanticModel/definition.pbism",
              "payload": "ewogICIkc2NoZW1hIjogImh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vanNvbi1zY2hlbWFzL2ZhYnJpYy9pdGVtL3NlbWFudGljTW9kZWwvZGVmaW5pdGlvblByb3BlcnRpZXMvMS4wLjAvc2NoZW1hLmpzb24iLAogICJ2ZXJzaW9uIjogIjQuMiIsCiAgInNldHRpbmdzIjogewogICAgInFuYUVuYWJsZWQiOiB0cnVlCiAgfQp9",
              "payloadType": "InlineBase64"
            }
          ]
        }
      ]
    }
  ]
}
